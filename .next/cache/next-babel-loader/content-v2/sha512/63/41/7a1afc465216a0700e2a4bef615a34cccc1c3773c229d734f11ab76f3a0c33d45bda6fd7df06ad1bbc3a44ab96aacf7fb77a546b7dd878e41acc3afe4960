{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/CourseOutcomeTable.js\";\nimport { useState } from \"react\";\nimport { Box, Button, Text, HStack, Table, Tbody, Tr, Td, Center, Checkbox } from \"@chakra-ui/react\";\nimport CheckBoxGroup from \"./CheckboxGroup\";\n\nconst CourseOutcomeTable = ({\n  course\n}) => {\n  const {\n    0: outcomes,\n    1: setOutcomes\n  } = useState(course.outcomes);\n  const {\n    0: checkArray,\n    1: setCheckArray\n  } = useState(course.studentMap);\n\n  const HandleCheck = idx => {\n    var temp = checkArray;\n    temp[idx] = temp[idx] === 0 ? 1 : 0;\n    setCheckArray(temp);\n    console.log(checkArray);\n  };\n\n  function handleCourseUpdate(courseIdx, studentIdx) {\n    var temp = outcomes;\n    const checkValue = temp[courseIdx].studentMap[studentIdx];\n    temp[courseIdx].studentMap[studentIdx] = checkValue === 0 ? 1 : 0;\n    setOutcomes(temp);\n  }\n\n  const rows = outcomes ? outcomes.map((outcome, courseIdx) => {\n    return /*#__PURE__*/_jsxDEV(Tr, {\n      children: /*#__PURE__*/_jsxDEV(Td, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [courseIdx + 1, \". \", outcome.outcome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mt: \"1em\",\n            children: \"Maps to: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBoxGroup, {\n            studentMap: outcome.studentMap\n          }, courseIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, courseIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 8\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"0 auto\",\n    w: \"80rem\",\n    padding: \"2em\",\n    bg: \"#edf2f7\",\n    mt: \"2em\",\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      textAlign: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: course.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#38A169\",\n        fontWeight: \"bold\",\n        children: course.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      padding: \"1em\",\n      w: \"90%\",\n      bg: \"white\",\n      borderRadius: \"8px\",\n      children: /*#__PURE__*/_jsxDEV(Tbody, {\n        children: course.outcomes.map((outcome, courseIdx) => {\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            children: /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [courseIdx + 1, \". \", outcome.outcome]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Center, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  mt: \"1em\",\n                  children: \"Maps to: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                  w: \"90%\",\n                  spacing: 8,\n                  justify: \"center\",\n                  children: outcome.studentMap.map((value, idx) => {\n                    return /*#__PURE__*/_jsxDEV(Checkbox, {\n                      value: value,\n                      onChange: e => {\n                        e.preventDefault();\n                        HandleCheck(idx);\n                      },\n                      children: idx + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)\n          }, courseIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"sm\",\n      colorScheme: \"teal\",\n      mt: \"1em\",\n      children: \"Update Course Mapping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\nexport default CourseOutcomeTable;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/CourseOutcomeTable.js"],"names":["useState","Box","Button","Text","HStack","Table","Tbody","Tr","Td","Center","Checkbox","CheckBoxGroup","CourseOutcomeTable","course","outcomes","setOutcomes","checkArray","setCheckArray","studentMap","HandleCheck","idx","temp","console","log","handleCourseUpdate","courseIdx","studentIdx","checkValue","rows","map","outcome","name","code","value","e","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Text,\n  HStack,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Center,\n  Checkbox\n} from \"@chakra-ui/react\";\nimport CheckBoxGroup from \"./CheckboxGroup\";\n\nconst CourseOutcomeTable = ({ course }) => {\n  const [outcomes, setOutcomes] = useState(course.outcomes);\n  const [checkArray, setCheckArray] = useState(course.studentMap);\n    \n  const HandleCheck = (idx) => {\n    var temp = checkArray;\n    temp[idx] = (temp[idx] === 0) ? 1 : 0;\n    setCheckArray(temp);\n    console.log(checkArray);\n  }\n\n  function handleCourseUpdate( courseIdx, studentIdx ){\n    var temp = outcomes;\n    const checkValue = temp[courseIdx].studentMap[studentIdx];\n    temp[courseIdx].studentMap[studentIdx] = (checkValue === 0) ? 1 : 0;\n    setOutcomes(temp);\n  }\n\n  const rows = outcomes ? outcomes.map((outcome, courseIdx) => {\n    return (\n      <Tr key={courseIdx}>\n        <Td>\n          <Text>{courseIdx+1}. {outcome.outcome}</Text>\n          <br/>\n          <Center>\n            <Text mt=\"1em\">Maps to: </Text>\n            <CheckBoxGroup studentMap={outcome.studentMap} key={courseIdx}/>\n          </Center>\n        </Td>\n      </Tr>\n    )\n  }) : <div></div>\n\n  \n\n  return( \n      <Box  m=\"0 auto\" w=\"80rem\" padding=\"2em\" bg=\"#edf2f7\" mt=\"2em\">\n        <HStack textAlign=\"left\">\n          <Text fontWeight=\"bold\">{course.name}</Text>\n          <Text color=\"#38A169\" fontWeight=\"bold\">{course.code}</Text>\n        </HStack>\n        <Table  padding=\"1em\" w=\"90%\" bg=\"white\" borderRadius=\"8px\">\n          <Tbody>\n            {/* {rows} */}\n            {course.outcomes.map((outcome, courseIdx) => {\n                return (\n                  <Tr key={courseIdx}>\n                    <Td>\n                      <Text>{courseIdx+1}. {outcome.outcome}</Text>\n                      <br/>\n                      <Center>\n                        <Text mt=\"1em\">Maps to: </Text>\n                        {/* <CheckBoxGroup studentMap={outcome.studentMap} key={courseIdx}/> */}\n                        <HStack w=\"90%\" spacing={8} justify=\"center\">\n                          {outcome.studentMap.map((value, idx) => {\n                            return (\n                              <Checkbox\n                                value={value}\n                                onChange={e => {\n                                    e.preventDefault();\n                                    HandleCheck(idx)\n                                  }\n                                }\n                              >\n                                {idx + 1}\n                              </Checkbox>\n                            )\n                          })}\n                        </HStack>\n                      </Center>\n                    </Td>\n                  </Tr>\n                )\n            })}\n          </Tbody>\n        </Table>\n        <Button size=\"sm\" colorScheme=\"teal\" mt=\"1em\">Update Course Mapping</Button>\n      </Box>\n    );\n};\nexport default CourseOutcomeTable;\n"]},"metadata":{},"sourceType":"module"}