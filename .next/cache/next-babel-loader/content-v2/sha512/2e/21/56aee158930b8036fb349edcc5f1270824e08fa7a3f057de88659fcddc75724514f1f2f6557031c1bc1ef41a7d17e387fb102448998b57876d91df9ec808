{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\components\\\\admin-components\\\\OutcomeMapping\\\\OutcomeMapping.js\";\nimport { useState, useEffect } from \"react\";\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\n\nconst OutcomeMapping = () => {\n  const programs = programData.programs;\n  const {\n    0: option,\n    1: setOption\n  } = useState();\n  const {\n    0: studentOutcomes,\n    1: setStudentOutcomes\n  } = useState();\n  const {\n    0: outcomeMapping,\n    1: setOutcomeMapping\n  } = useState();\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs);\n  }, []);\n  useEffect(() => {\n    if (option != null) {\n      const numOfStudentOutcomes = studentOutcomes.length;\n      const courseOutcomesArray = courseData.courses.map(course => {\n        return {\n          name: course.name,\n          code: course.code,\n          outcomes: course['course-outcomes'].map(outcome => {\n            return {\n              outcome: outcome,\n              studentMap: new Array(numOfStudentOutcomes).fill(0)\n            };\n          })\n        };\n      });\n      setOutcomeMapping(courseOutcomesArray);\n    }\n  }, [option]);\n\n  const handleSetOption = e => {\n    setOption(e.target.value);\n  };\n\n  const renderOptions = programs.map(program => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: program.name,\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  });\n  const selectedProgram = programs.filter(program => program.name == option)[0];\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map(course => {\n    return /*#__PURE__*/_jsxDEV(CourseOutcomeTable, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 8\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"80%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        mt: \"1em\",\n        children: \"Student Outcome Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        mt: \"1em\",\n        w: \"80%\",\n        id: \"course\",\n        placeholder: \"Select program\",\n        variant: \"filled\",\n        onChange: handleSetOption,\n        value: option,\n        children: renderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StudentOutcomeList, {\n            selectedProgram: selectedProgram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), renderMappingTable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default OutcomeMapping;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/components/admin-components/OutcomeMapping/OutcomeMapping.js"],"names":["useState","useEffect","VStack","Text","Select","StudentOutcomeList","programData","courseData","CourseOutcomeTable","OutcomeMapping","programs","option","setOption","studentOutcomes","setStudentOutcomes","outcomeMapping","setOutcomeMapping","document","getElementById","scrollIntoView","numOfStudentOutcomes","length","courseOutcomesArray","courses","map","course","name","code","outcomes","outcome","studentMap","Array","fill","handleSetOption","e","target","value","renderOptions","program","selectedProgram","filter","renderMappingTable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { VStack, Text, Select } from '@chakra-ui/react';\r\nimport StudentOutcomeList from \"./StudentOutcomeList\";\r\nimport programData from \"../../../fake-data/programs.json\";\r\nimport courseData from \"../../../fake-data/course.json\";\r\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\r\n\r\nconst OutcomeMapping = () => {\r\n  const programs = programData.programs;\r\n\r\n  const [option, setOption] = useState();\r\n  const [studentOutcomes, setStudentOutcomes] = useState();\r\n  const [outcomeMapping, setOutcomeMapping] = useState();\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"top\").scrollIntoView();\r\n    setStudentOutcomes(programs);\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    if (option != null){\r\n      const numOfStudentOutcomes = studentOutcomes.length;\r\n      const courseOutcomesArray = courseData.courses.map((course) => {\r\n        return {\r\n          name :course.name, \r\n          code: course.code,\r\n          outcomes: \r\n            course['course-outcomes'].map((outcome) => {\r\n              return {\r\n                outcome: outcome,\r\n                studentMap: new Array(numOfStudentOutcomes).fill(0)\r\n              }\r\n            })\r\n        }\r\n      });\r\n      setOutcomeMapping(courseOutcomesArray);\r\n    }\r\n  }, [option])\r\n\r\n  const handleSetOption = (e) => {\r\n    setOption(e.target.value);\r\n  };\r\n\r\n  const renderOptions = programs.map((program) => {\r\n    return <option value={program.name}>{program.name}</option>;\r\n  });\r\n  const selectedProgram = programs.filter((program) => program.name == option)[0];\r\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map((course) => {\r\n    return <CourseOutcomeTable course={course}/>\r\n  }) : <div></div>\r\n\r\n  return (\r\n    <>\r\n      <VStack id=\"top\" w=\"80%\" m=\"0 auto\">\r\n          <Text fontSize=\"2xl\" fontWeight=\"bold\" mt=\"1em\">\r\n            Student Outcome Mapping\r\n          </Text>\r\n          <Select\r\n            mt=\"1em\"\r\n            w=\"80%\"\r\n            id=\"course\"\r\n            placeholder=\"Select program\"\r\n            variant=\"filled\"\r\n            onChange={handleSetOption}\r\n            value={option}\r\n          >\r\n            {/* this should be filled with a list of courses from db */}\r\n            {renderOptions}\r\n          </Select>\r\n        <div>\r\n          {option \r\n            ? \r\n              <div>\r\n                <StudentOutcomeList selectedProgram={selectedProgram} />\r\n                {renderMappingTable}\r\n              </div>\r\n            : \r\n              <div></div>\r\n          }\r\n        </div>\r\n      </VStack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OutcomeMapping;\r\n"]},"metadata":{},"sourceType":"module"}