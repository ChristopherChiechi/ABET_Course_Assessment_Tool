{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { List, ListItem, Select, Text, VStack, HStack, RadioGroup, Radio, Container, Center, Textarea, Divider, Button } from \"@chakra-ui/react\";\nimport useToggle from \"../hooks/useToggle\";\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\nimport PageContext from '../components/survey-components/SurveyPageData';\n\nvar studentSurvey = function studentSurvey() {\n  _s();\n\n  var _useState = useState({\n    major: \"\",\n    classification: \"\",\n    expectedGrade: \"\"\n  }),\n      studentInformation = _useState[0],\n      setStudentInformation = _useState[1];\n\n  var _useState2 = useState({\n    text: \"\"\n  }),\n      taPerformanceText = _useState2[0],\n      setTaPerformanceText = _useState2[1];\n\n  var _useState3 = useState({\n    text: \"\"\n  }),\n      classPerformanceText = _useState3[0],\n      setClassPerformanceText = _useState3[1];\n\n  var _useToggle = useToggle(true),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isLoggedIn = _useToggle2[0],\n      toggleLogin = _useToggle2[1];\n\n  var testFunction = function testFunction() {\n    console.log(studentInformationMajor.major);\n    console.log(studentInformationYear.year);\n    console.log(studentInformationGrades.grades);\n    console.log(taPerformanceText.text);\n    console.log(classPerformanceText.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(VStack, {\n      mt: \"2em\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        children: [course.code, \" \", course.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(StudentInfoForm, {\n        setStudentInformation: setStudentInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: testFunction,\n        mb: \"1em\",\n        colorScheme: \"green\",\n        children: \"Submit Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(StudentLoginBox, {\n      toggleLoggin: toggleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(studentSurvey, \"aHU1XL/pRs2gNoe6FSRYM4OEBYY=\", false, function () {\n  return [useToggle];\n});\n\nexport default studentSurvey;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js"],"names":["useState","createContext","List","ListItem","Select","Text","VStack","HStack","RadioGroup","Radio","Container","Center","Textarea","Divider","Button","useToggle","StudentLoginBox","StudentInfoForm","PageContext","studentSurvey","major","classification","expectedGrade","studentInformation","setStudentInformation","text","taPerformanceText","setTaPerformanceText","classPerformanceText","setClassPerformanceText","isLoggedIn","toggleLogin","testFunction","console","log","studentInformationMajor","studentInformationYear","year","studentInformationGrades","grades","course","code","name"],"mappings":";;;;;;;AAAA,SACEA,QADF,EAEEC,aAFF,QAGO,OAHP;AAIA,SACEC,IADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,UAPF,EAQEC,KARF,EASEC,SATF,EAUEC,MAVF,EAWEC,QAXF,EAYEC,OAZF,EAaEC,MAbF,QAcO,kBAdP;AAiBA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AAEA,OAAOC,WAAP,MAAwB,gDAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBAE0BnB,QAAQ,CAAC;AAC3DoB,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,cAAc,EAAE,EAF2C;AAG3DC,IAAAA,aAAa,EAAE;AAH4C,GAAD,CAFlC;AAAA,MAEnBC,kBAFmB;AAAA,MAECC,qBAFD;;AAAA,mBAQwBxB,QAAQ,CAAC;AAAEyB,IAAAA,IAAI,EAAE;AAAR,GAAD,CARhC;AAAA,MAQnBC,iBARmB;AAAA,MAQAC,oBARA;;AAAA,mBAS8B3B,QAAQ,CAAC;AAC/DyB,IAAAA,IAAI,EAAE;AADyD,GAAD,CATtC;AAAA,MASnBG,oBATmB;AAAA,MASGC,uBATH;;AAAA,mBAaQd,SAAS,CAAC,IAAD,CAbjB;AAAA;AAAA,MAanBe,UAbmB;AAAA,MAaPC,WAbO;;AAe1B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,uBAAuB,CAACf,KAApC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYE,sBAAsB,CAACC,IAAnC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,wBAAwB,CAACC,MAArC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAiB,CAACD,IAA9B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,oBAAoB,CAACH,IAAjC;AACD,GAND;;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAA,cACGK,UAAU,gBAET,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,KAAf;AAAqB,QAAA,UAAU,EAAC,MAAhC;AAAA,mBAAwCU,MAAM,CAACC,IAA/C,OAAsDD,MAAM,CAACE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,QAAC,eAAD;AAAiB,QAAA,qBAAqB,EAAElB;AAAxC;AAAA;AAAA;AAAA;AAAA,eAHF,eAoGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEQ,YAAjB;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,WAAW,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApGF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFS,gBAyGT,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA;AA1GJ;AAAA;AAAA;AAAA;AAAA,WADF;AA8GD,CApID;;GAAMZ,a;UAa8BJ,S;;;AAwHpC,eAAeI,aAAf","sourcesContent":["import {\n  useState,\n  createContext\n} from \"react\";\nimport {\n  List,\n  ListItem,\n  Select,\n  Text,\n  VStack,\n  HStack,\n  RadioGroup,\n  Radio,\n  Container,\n  Center,\n  Textarea,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\n\nimport useToggle from \"../hooks/useToggle\"\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\n\nimport PageContext from '../components/survey-components/SurveyPageData';\n\nconst studentSurvey = () => {\n\n  const [studentInformation, setStudentInformation] = useState({\n    major: \"\",\n    classification: \"\",\n    expectedGrade: \"\"\n  });\n\n  const [taPerformanceText, setTaPerformanceText] = useState({ text: \"\" });\n  const [classPerformanceText, setClassPerformanceText] = useState({\n    text: \"\",\n  });\n\n  const [isLoggedIn, toggleLogin] = useToggle(true);\n\n  const testFunction = () => {\n    console.log(studentInformationMajor.major);\n    console.log(studentInformationYear.year);\n    console.log(studentInformationGrades.grades);\n    console.log(taPerformanceText.text);\n    console.log(classPerformanceText.text);\n  };\n  return (\n    <PageContext.Provider>\n      {isLoggedIn\n        ?\n        <VStack mt=\"2em\">\n          <Text fontSize=\"2xl\" fontWeight=\"bold\">{course.code} {course.name}</Text>\n\n          <StudentInfoForm setStudentInformation={setStudentInformation} />\n\n\n          {/* <Text fontWeight=\"bold\">\n            For each of the course outcomes, rate each from 1 to 5 in terms of\n        agreement with your level of agreement.{\" \"}\n          </Text>\n          <Center\n            m=\"2em\"\n            padding=\"2em\"\n            bg=\"#edf2f7\"\n            w=\"80%\"\n          >\n            <List padding=\"1em\" w=\"90%\" bg=\"white\" borderRadius=\"8px\">\n              {course[\"course-outcomes\"].map((outcome, idx) => {\n                return (\n                  <ListItem mb=\"1em\">\n                    { (idx > 0) ? <Divider /> : null}\n                    <VStack>\n                      <Text mt=\"1em\">{outcome}</Text>\n                      <RadioGroup>\n                        <HStack spacing={10}>\n                          <Radio bg=\"white\">1</Radio>\n                          <Radio bg=\"white\">2</Radio>\n                          <Radio bg=\"white\">3</Radio>\n                          <Radio bg=\"white\">4</Radio>\n                          <Radio bg=\"white\">5</Radio>\n                        </HStack>\n                      </RadioGroup>\n                    </VStack>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Center>\n\n          <Text fontWeight=\"bold\">\n            TA evaluation Have each rated 1-5, with 5 being very satisfied and 1\n        being very unsatisfied{\" \"}\n          </Text>\n\n          <Center\n            m=\"2em\"\n            padding=\"2em\"\n            bg=\"#edf2f7\"\n            w=\"80%\"\n          >\n            <List padding=\"1em\" w=\"90%\" bg=\"white\" borderRadius=\"8px\">\n              {questions.map((question, idx) => {\n                return (\n                  <ListItem mb=\"1em\">\n                    { (idx > 0) ? <Divider /> : null}\n                    <VStack>\n                      <Text mt=\"1em\">{question.question}</Text>\n                      <RadioGroup>\n                        <HStack spacing={10}>\n                          <Radio bg=\"white\">1</Radio>\n                          <Radio bg=\"white\">2</Radio>\n                          <Radio bg=\"white\">3</Radio>\n                          <Radio bg=\"white\">4</Radio>\n                          <Radio bg=\"white\">5</Radio>\n                          <Radio bg=\"white\">NA</Radio>\n                        </HStack>\n                      </RadioGroup>\n                    </VStack>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Center>\n\n          <Container\n            m=\"2em\"\n            padding=\"2em\"\n            bg=\"#edf2f7\" a\n            minW=\"80%\"\n          >\n            <Text fontWeight=\"bold\">Additional comments on TA's performance</Text>\n            <Textarea\n              onChange={(e) => setTaPerformanceText({ text: e.target.value })}\n              bg=\"white\"\n            ></Textarea>\n          </Container>\n\n          <Container\n            m=\"2em\"\n            padding=\"2em\"\n            bg=\"#edf2f7\"\n            minW=\"80%\"\n          >\n            <Text fontWeight=\"bold\">List ways this course can be improved</Text>\n            <Textarea\n              onChange={(e) => setClassPerformanceText({ text: e.target.value })}\n              bg=\"white\"\n            ></Textarea>\n          </Container> */}\n\n          <Button onClick={testFunction} mb=\"1em\" colorScheme=\"green\">Submit Survey</Button>\n        </VStack>\n        :\n        <StudentLoginBox toggleLoggin={toggleLogin} />\n      }\n    </PageContext.Provider>)\n};\nexport default studentSurvey;\n"]},"metadata":{},"sourceType":"module"}