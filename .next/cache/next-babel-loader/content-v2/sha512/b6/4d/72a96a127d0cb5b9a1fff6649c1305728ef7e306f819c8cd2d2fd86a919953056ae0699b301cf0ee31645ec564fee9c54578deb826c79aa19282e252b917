{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { VStack, Badge, Select } from '@chakra-ui/react';\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue } from 'recoil';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\n\nvar OutcomeMapping = function OutcomeMapping() {\n  _s();\n\n  var programs = programData.programs;\n\n  var _useState = useState(),\n      option = _useState[0],\n      setOption = _useState[1];\n\n  var _useState2 = useState(),\n      studentOutcomes = _useState2[0],\n      setStudentOutcomes = _useState2[1];\n\n  var _useState3 = useState(),\n      courses = _useState3[0],\n      setCourses = _useState3[1];\n\n  var _useState4 = useState(),\n      outcomeMapping = _useState4[0],\n      setOutcomeMapping = _useState4[1];\n\n  var test = atom({\n    key: 'test',\n    \"default\": 'hello'\n  });\n  useEffect(function () {\n    document.getElementById(\"top\").scrollIntoView();\n    setCourses(courseData.courses);\n    setStudentOutcomes(programs);\n  }, []);\n  useEffect(function () {\n    if (option != null) {\n      var numOfStudentOutcomes = studentOutcomes.length;\n      var courseOutcomesArray = courses.map(function (course) {\n        return {\n          name: course.name,\n          code: course.code,\n          outcomes: course['course-outcomes'].map(function (outcome) {\n            return {\n              outcome: outcome,\n              studentMap: new Array(numOfStudentOutcomes).fill(0)\n            };\n          })\n        };\n      });\n      console.log(courseOutcomesArray);\n      setCourses(courseOutcomesArray);\n    }\n  }, [option]);\n\n  var handleSetOption = function handleSetOption(e) {\n    setOption(e.target.value);\n  };\n\n  var renderOptions = programs.map(function (program) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: program.name,\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, _this);\n  });\n  var selectedProgram = programs.filter(function (program) {\n    return program.name == option;\n  })[0];\n  var renderMappingTable = courses ? courses.map(function (course) {\n    return /*#__PURE__*/_jsxDEV(CourseOutcomeTable, {\n      course: course,\n      studentOutcomes: studentOutcomes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, _this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 8\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(RecoilRoot, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"80%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        fontSize: \"2xl\",\n        mt: \"1em\",\n        children: \"Student Outcome Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        mt: \"1em\",\n        w: \"80%\",\n        id: \"course\",\n        placeholder: \"Select program\",\n        variant: \"filled\",\n        onChange: handleSetOption,\n        value: option,\n        children: renderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StudentOutcomeList, {\n            selectedProgram: selectedProgram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, _this), renderMappingTable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OutcomeMapping, \"vaY5pKb2F1jK1uBP+BsoD7iqSe8=\");\n\n_c = OutcomeMapping;\nexport default OutcomeMapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutcomeMapping\");","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js"],"names":["useState","useEffect","VStack","Badge","Select","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","StudentOutcomeList","programData","courseData","CourseOutcomeTable","OutcomeMapping","programs","option","setOption","studentOutcomes","setStudentOutcomes","courses","setCourses","outcomeMapping","setOutcomeMapping","test","key","document","getElementById","scrollIntoView","numOfStudentOutcomes","length","courseOutcomesArray","map","course","name","code","outcomes","outcome","studentMap","Array","fill","console","log","handleSetOption","e","target","value","renderOptions","program","selectedProgram","filter","renderMappingTable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { VStack, Badge, Select } from '@chakra-ui/react';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\n\nconst OutcomeMapping = () => {\n  const programs = programData.programs;\n\n  const [option, setOption] = useState();\n  const [studentOutcomes, setStudentOutcomes] = useState();\n  const [courses, setCourses] = useState();\n  const [outcomeMapping, setOutcomeMapping] = useState();\n\n  const test = atom({\n    key: 'test',\n    default: 'hello'\n  })\n\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setCourses(courseData.courses)\n    setStudentOutcomes(programs);\n  },[]);\n\n  useEffect(() => {\n    if (option != null){\n      const numOfStudentOutcomes = studentOutcomes.length;\n      const courseOutcomesArray = courses.map((course) => {\n        return {\n          name :course.name, \n          code: course.code,\n          outcomes: \n            course['course-outcomes'].map((outcome) => {\n              return {\n                outcome: outcome,\n                studentMap: new Array(numOfStudentOutcomes).fill(0)\n              }\n            })\n        }\n      });\n      console.log(courseOutcomesArray);\n      setCourses(courseOutcomesArray);\n    }\n  }, [option])\n\n  const handleSetOption = (e) => {\n    setOption(e.target.value);\n  };\n\n  const renderOptions = programs.map((program) => {\n    return <option value={program.name}>{program.name}</option>;\n  });\n  const selectedProgram = programs.filter((program) => program.name == option)[0];\n  const renderMappingTable = courses ? courses.map((course) => {\n    return <CourseOutcomeTable course={course} studentOutcomes={studentOutcomes}/>\n  }) : <div></div>\n\n  return (\n    <RecoilRoot>\n      <VStack id=\"top\" w=\"80%\" m=\"0 auto\">\n          <Badge fontSize=\"2xl\" mt=\"1em\">\n            Student Outcome Mapping\n          </Badge>\n          <Select\n            mt=\"1em\"\n            w=\"80%\"\n            id=\"course\"\n            placeholder=\"Select program\"\n            variant=\"filled\"\n            onChange={handleSetOption}\n            value={option}\n          >\n            {/* this should be filled with a list of courses from db */}\n            {renderOptions}\n          </Select>\n        <div>\n          {option \n            ? \n              <div>\n                <StudentOutcomeList selectedProgram={selectedProgram} />\n                {renderMappingTable}\n              </div>\n            : \n              <div></div>\n          }\n        </div>\n      </VStack>\n    </RecoilRoot>\n  );\n};\n\nexport default OutcomeMapping;\n"]},"metadata":{},"sourceType":"module"}