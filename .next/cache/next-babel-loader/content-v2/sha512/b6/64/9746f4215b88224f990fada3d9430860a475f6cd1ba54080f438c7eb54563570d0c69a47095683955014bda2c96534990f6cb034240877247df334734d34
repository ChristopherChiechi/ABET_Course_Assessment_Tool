{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\schic\\\\OneDrive\\\\Documents\\\\UNT\\\\Fall_20\\\\4901 Capstone\\\\Capstone Project\\\\Frontend2\\\\components\\\\survey-components\\\\StudentLoginBox.js\";\nimport { Box, FormControl, FormLabel, Input, Button, Text, useToast } from '@chakra-ui/react';\nimport useInputState from '../../hooks/useInputState';\nimport Link from 'next/link';\nimport { login } from '../../api/APIHelper';\n\nconst StudentLoginBox = ({\n  toggleLoggin\n}) => {\n  const [username, setUsername, resetUsername] = useInputState(\"\");\n  const [password, setPassword, resetPassword] = useInputState(\"\");\n  const toast = useToast();\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      const response = await login(username, password);\n\n      if (response) {\n        //alert(\"success\");\n        toast({\n          title: \"Sign in successful\",\n          status: \"success\",\n          duration: 9000,\n          isClosable: true\n        });\n        console.log(response);\n        toggleLoggin();\n      } else toast({\n        title: \"Incorrect UserID or password\",\n        description: \"Here's your token ðŸª™\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true\n      });\n    } catch (error) {\n      alert(\"try 'admin' & 'admin'\");\n    } finally {\n      resetUsername();\n      resetPassword();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"10%\",\n    ml: \"auto\",\n    mr: \"auto\",\n    padding: \"2em\",\n    bg: \"#edf2f7\",\n    w: \"80%\",\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      fontWeight: \"bold\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"username\",\n          margin: \"1rem\",\n          mt: \"3rem\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"EUID\",\n          value: username,\n          onChange: setUsername,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"password\",\n          margin: \"1rem\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: setPassword,\n          bg: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        margin: \"1rem\",\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default StudentLoginBox;","map":{"version":3,"sources":["C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/components/survey-components/StudentLoginBox.js"],"names":["Box","FormControl","FormLabel","Input","Button","Text","useToast","useInputState","Link","login","StudentLoginBox","toggleLoggin","username","setUsername","resetUsername","password","setPassword","resetPassword","toast","handleSubmit","evt","preventDefault","response","title","status","duration","isClosable","console","log","description","error","alert"],"mappings":"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","sourcesContent":["import {Box, FormControl, FormLabel, Input, Button, Text, useToast} from '@chakra-ui/react';\r\nimport useInputState from '../../hooks/useInputState';\r\nimport Link from 'next/link';\r\nimport { login } from '../../api/APIHelper';\r\n\r\nconst StudentLoginBox = ({toggleLoggin}) => {\r\n\r\n    const [username, setUsername, resetUsername] = useInputState(\"\");\r\n    const [password, setPassword, resetPassword] = useInputState(\"\");\r\n    const toast = useToast();\r\n    \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        \r\n        try {\r\n            const response = await login(username, password);\r\n\r\n            if (response) {\r\n                //alert(\"success\");\r\n                toast({\r\n                    title: \"Sign in successful\",\r\n                    status: \"success\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  })\r\n                console.log(response);\r\n                toggleLoggin();\r\n            }\r\n            else \r\n            toast({\r\n                title: \"Incorrect UserID or password\",\r\n                description: \"Here's your token ðŸª™\",\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n              })\r\n        } catch (error) {\r\n            alert(\"try 'admin' & 'admin'\");\r\n        }\r\n        finally{\r\n            resetUsername();\r\n            resetPassword();\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Box mt=\"10%\" ml=\"auto\" mr=\"auto\" padding=\"2em\" bg=\"#edf2f7\" w=\"80%\" boxShadow=\"0px 4px 4px rgba(0, 0, 0, 0.25)\">\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\">Login</Text>\r\n            <form onSubmit={handleSubmit}>    \r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"username\" margin = \"1rem\" mt=\"3rem\">Username</FormLabel>\r\n                    <Input placeholder=\"EUID\" value={username} onChange={setUsername} bg=\"white\"/>\r\n                </FormControl>\r\n\r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"password\" margin = \"1rem\">Password</FormLabel>\r\n                    <Input placeholder=\"Password\" type=\"password\" value={password} onChange={setPassword} bg=\"white\"/>\r\n                </FormControl>\r\n\r\n                <Button colorScheme=\"green\" margin = \"1rem\" onClick = {handleSubmit} type=\"submit\">Sign In</Button>\r\n            </form>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default StudentLoginBox;"]},"metadata":{},"sourceType":"module"}