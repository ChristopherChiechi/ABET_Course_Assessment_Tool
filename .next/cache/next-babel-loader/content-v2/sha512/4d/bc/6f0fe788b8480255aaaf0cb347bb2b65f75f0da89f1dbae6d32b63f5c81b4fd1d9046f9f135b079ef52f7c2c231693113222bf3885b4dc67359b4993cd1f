{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n//imports\nimport { useState, useContext, useEffect } from \"react\";\nimport { Text, VStack, Button, Box } from \"@chakra-ui/react\"; //hooks\n\nimport useToggle from \"../hooks/useToggle\"; //components\n\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\nimport CourseOutcomesSurvey from \"../components/survey-components/CourseOutcomesSurvey\";\nimport TAsurvey from \"../components/survey-components/TAsurvey\";\nimport StudentFeedback from \"../components/survey-components/StudentFeedback\"; //page data \n\nimport { PageContext, pageData } from '../components/survey-components/SurveyPageData';\n\nvar studentSurvey = function studentSurvey() {\n  _s();\n\n  var context = useContext(PageContext);\n  var course = context.course; //state\n\n  var _useToggle = useToggle(true),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isLoggedIn = _useToggle2[0],\n      toggleLogin = _useToggle2[1];\n\n  var _useState = useState({\n    major: \"\",\n    classification: \"\",\n    expectedGrade: \"\"\n  }),\n      studentInformation = _useState[0],\n      setStudentInformation = _useState[1];\n\n  var _useState2 = useState(context.course['course-outcomes']),\n      outcomeSurvey = _useState2[0],\n      setOutcomeSurvey = _useState2[1];\n\n  var _useState3 = useState(context.questions),\n      TAquestions = _useState3[0],\n      setTAquestions = _useState3[1];\n\n  var _useState4 = useState({\n    TAeval: \"\",\n    additionalFeedback: \"\"\n  }),\n      studentInput = _useState4[0],\n      setStudentInput = _useState4[1];\n\n  useEffect(function () {\n    console.log('ss updated');\n  }, [TAquestions]);\n\n  var testFunction = function testFunction() {\n    console.log(studentInformation, outcomeSurvey, TAquestions, studentInput);\n  };\n\n  var handleChange = function handleChange(rating, idx, type) {\n    if (type == \"TA\") {\n      var temp = TAquestions;\n      temp[idx].rating = parseInt(rating);\n      setTAquestions(_toConsumableArray(temp));\n      console.log(TAquestions[idx]);\n    } else if (type == \"Outcomes\") {\n      var temp = outcomeSurvey;\n      outcomeSurvey[idx].rating = parseInt(rating);\n      setOutcomeSurvey(_toConsumableArray(temp));\n      console.log(outcomeSurvey[idx]);\n    } else {\n      console.log(\"incorrect type\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n    value: pageData,\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"bold\",\n          children: [course.code, \" \", course.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(VStack, {\n        mt: \"2em\",\n        children: [/*#__PURE__*/_jsxDEV(StudentInfoForm, {\n          studentInformation: studentInformation,\n          setStudentInformation: setStudentInformation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CourseOutcomesSurvey, {\n          outcomeSurvey: outcomeSurvey,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(TAsurvey, {\n          TAquestions: TAquestions,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(StudentFeedback, {\n          studentInput: studentInput,\n          setStudentInput: setStudentInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: testFunction,\n          mb: \"1em\",\n          colorScheme: \"green\",\n          children: \"Submit Survey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(StudentLoginBox, {\n      toggleLoggin: toggleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(studentSurvey, \"0ocqu4+iIea3O6XYCLz7Rr7J2pE=\", false, function () {\n  return [useToggle];\n});\n\nexport default studentSurvey;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js"],"names":["useState","useContext","useEffect","Text","VStack","Button","Box","useToggle","StudentLoginBox","StudentInfoForm","CourseOutcomesSurvey","TAsurvey","StudentFeedback","PageContext","pageData","studentSurvey","context","course","isLoggedIn","toggleLogin","major","classification","expectedGrade","studentInformation","setStudentInformation","outcomeSurvey","setOutcomeSurvey","questions","TAquestions","setTAquestions","TAeval","additionalFeedback","studentInput","setStudentInput","console","log","testFunction","handleChange","rating","idx","type","temp","parseInt","code","name"],"mappings":";;;;;;;;;AAAA;AACA,SACEA,QADF,EAEEC,UAFF,EAGEC,SAHF,QAIO,OAJP;AAKA,SACEC,IADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,GAJF,QAKO,kBALP,C,CAMA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,eAAP,MAA4B,iDAA5B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gDAAtC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,MAAMC,OAAO,GAAGf,UAAU,CAACY,WAAD,CAA1B;AACA,MAAMI,MAAM,GAAGD,OAAO,CAACC,MAAvB,CAF0B,CAI1B;;AAJ0B,mBAKQV,SAAS,CAAC,IAAD,CALjB;AAAA;AAAA,MAKnBW,UALmB;AAAA,MAKPC,WALO;;AAAA,kBAM0BnB,QAAQ,CAAC;AAC3DoB,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,cAAc,EAAE,EAF2C;AAG3DC,IAAAA,aAAa,EAAE;AAH4C,GAAD,CANlC;AAAA,MAMnBC,kBANmB;AAAA,MAMCC,qBAND;;AAAA,mBAWgBxB,QAAQ,CAACgB,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAD,CAXxB;AAAA,MAWnBQ,aAXmB;AAAA,MAWJC,gBAXI;;AAAA,mBAYY1B,QAAQ,CAACgB,OAAO,CAACW,SAAT,CAZpB;AAAA,MAYnBC,WAZmB;AAAA,MAYNC,cAZM;;AAAA,mBAac7B,QAAQ,CAAC;AAC/C8B,IAAAA,MAAM,EAAE,EADuC;AAE/CC,IAAAA,kBAAkB,EAAE;AAF2B,GAAD,CAbtB;AAAA,MAanBC,YAbmB;AAAA,MAaLC,eAbK;;AAkB1B/B,EAAAA,SAAS,CAAC,YAAM;AACdgC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFQ,EAEN,CAACP,WAAD,CAFM,CAAT;;AAIA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAYZ,kBAAZ,EAAgCE,aAAhC,EAA+CG,WAA/C,EAA4DI,YAA5D;AACD,GAFD;;AAIA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAuB;AAC1C,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,UAAIC,IAAI,GAAGb,WAAX;AACAa,MAAAA,IAAI,CAACF,GAAD,CAAJ,CAAUD,MAAV,GAAmBI,QAAQ,CAACJ,MAAD,CAA3B;AACAT,MAAAA,cAAc,oBAAKY,IAAL,EAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACW,GAAD,CAAvB;AACD,KALD,MAMK,IAAIC,IAAI,IAAI,UAAZ,EAAwB;AAC3B,UAAIC,IAAI,GAAGhB,aAAX;AACAA,MAAAA,aAAa,CAACc,GAAD,CAAb,CAAmBD,MAAnB,GAA4BI,QAAQ,CAACJ,MAAD,CAApC;AACAZ,MAAAA,gBAAgB,oBAAKe,IAAL,EAAhB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYV,aAAa,CAACc,GAAD,CAAzB;AACD,KALI,MAMA;AACHL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAhBD;;AAkBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAErB,QAA7B;AAAA,cACGI,UAAU,gBAET;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,KAAf;AAAqB,UAAA,UAAU,EAAC,MAAhC;AAAA,qBAAyCD,MAAM,CAAC0B,IAAhD,OAAuD1B,MAAM,CAAC2B,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,kBAAkB,EAAErB,kBAArC;AAAyD,UAAA,qBAAqB,EAAEC;AAAhF;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,oBAAD;AAAsB,UAAA,aAAa,EAAEC,aAArC;AAAoD,UAAA,YAAY,EAAEY;AAAlE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,QAAD;AAAU,UAAA,WAAW,EAAET,WAAvB;AAAoC,UAAA,YAAY,EAAES;AAAlD;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,QAAC,eAAD;AAAiB,UAAA,YAAY,EAAEL,YAA/B;AAA6C,UAAA,eAAe,EAAEC;AAA9D;AAAA;AAAA;AAAA;AAAA,iBAJF,eAME,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEG,YAAjB;AAA+B,UAAA,EAAE,EAAC,KAAlC;AAAwC,UAAA,WAAW,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA,oBAFS,gBAiBT,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEjB;AAA/B;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CAlED;;GAAMJ,a;UAK8BR,S;;;AA8DpC,eAAeQ,aAAf","sourcesContent":["//imports\nimport {\n  useState,\n  useContext,\n  useEffect\n} from \"react\";\nimport {\n  Text,\n  VStack,\n  Button,\n  Box\n} from \"@chakra-ui/react\";\n//hooks\nimport useToggle from \"../hooks/useToggle\"\n//components\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\nimport CourseOutcomesSurvey from \"../components/survey-components/CourseOutcomesSurvey\";\nimport TAsurvey from \"../components/survey-components/TAsurvey\";\nimport StudentFeedback from \"../components/survey-components/StudentFeedback\";\n//page data \nimport { PageContext, pageData } from '../components/survey-components/SurveyPageData';\n\nconst studentSurvey = () => {\n  const context = useContext(PageContext);\n  const course = context.course;\n\n  //state\n  const [isLoggedIn, toggleLogin] = useToggle(true);\n  const [studentInformation, setStudentInformation] = useState({\n    major: \"\",\n    classification: \"\",\n    expectedGrade: \"\"\n  });\n  const [outcomeSurvey, setOutcomeSurvey] = useState(context.course['course-outcomes']);\n  const [TAquestions, setTAquestions] = useState(context.questions)\n  const [studentInput, setStudentInput] = useState({\n    TAeval: \"\",\n    additionalFeedback: \"\"\n  })\n\n  useEffect(() => {\n    console.log('ss updated');\n  }, [TAquestions]);\n\n  const testFunction = () => {\n    console.log(studentInformation, outcomeSurvey, TAquestions, studentInput);\n  };\n\n  const handleChange = (rating, idx, type) => {\n    if (type == \"TA\") {\n      var temp = TAquestions;\n      temp[idx].rating = parseInt(rating);\n      setTAquestions([...temp]);\n      console.log(TAquestions[idx]);\n    }\n    else if (type == \"Outcomes\") {\n      var temp = outcomeSurvey;\n      outcomeSurvey[idx].rating = parseInt(rating);\n      setOutcomeSurvey([...temp]);\n      console.log(outcomeSurvey[idx]);\n    }\n    else {\n      console.log(\"incorrect type\");\n    }\n  };\n\n  return (\n    <PageContext.Provider value={pageData}>\n      {isLoggedIn\n        ?\n        <>\n          <Box textAlign=\"left\">\n            <Text fontSize=\"2xl\" fontWeight=\"bold\" >{course.code} {course.name}</Text>\n          </Box>\n\n          <VStack mt=\"2em\">\n            <StudentInfoForm studentInformation={studentInformation} setStudentInformation={setStudentInformation} />\n            <CourseOutcomesSurvey outcomeSurvey={outcomeSurvey} handleChange={handleChange} />\n            <TAsurvey TAquestions={TAquestions} handleChange={handleChange} />\n            <StudentFeedback studentInput={studentInput} setStudentInput={setStudentInput} />\n\n            <Button onClick={testFunction} mb=\"1em\" colorScheme=\"green\">Submit Survey</Button>\n          </VStack>\n        </>\n        :\n        <StudentLoginBox toggleLoggin={toggleLogin} />\n      }\n    </PageContext.Provider>)\n};\nexport default studentSurvey;\n"]},"metadata":{},"sourceType":"module"}