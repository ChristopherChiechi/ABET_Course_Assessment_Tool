{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\schic\\\\OneDrive\\\\Documents\\\\UNT\\\\Fall_20\\\\4901 Capstone\\\\Capstone Project\\\\Frontend2\\\\components\\\\admin-components\\\\GenerateStudentSurveys.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Text, Button, List, ListItem, Link, Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\nimport { getCoursesByDepartment } from \"../../api/APIHelper\";\nimport useToggle from \"../../hooks/useToggle\";\n\nvar GenerateStudentSurveys = function GenerateStudentSurveys() {\n  _s();\n\n  var _useState = useState({\n    courses: []\n  }),\n      courseList = _useState[0],\n      setCourses = _useState[1];\n\n  var _useToggle = useToggle(),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isOn = _useToggle2[0],\n      toggleOn = _useToggle2[1];\n\n  var getNewCourses = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newCourseList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getCoursesByDepartment(\"CSCE\");\n\n            case 2:\n              newCourseList = _context.sent;\n              setCourses(_objectSpread(_objectSpread({}, courseList), {}, {\n                courses: newCourseList\n              }));\n              console.log(courseList.courses);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getNewCourses() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setButtonHandler = function setButtonHandler() {\n    setButtonName(\"Sort by Course Number\");\n  };\n\n  var surveyCourses = [].concat(courseList.courses).sort(function (a, b) {\n    return a.courseNumber > b.courseNumber ? 1 : -1;\n  }).map(function (course, idx) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        bg: idx % 2 == 0 ? \"gray.300\" : \"gray.100\",\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: [course.department, \" \", course.courseNumber, \",\", course.displayName, \", Intsructor: \", course.coordinator.firstName, \" \", course.coordinator.lastName, \", Survey Link:\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"teal\",\n            href: \"https://www.unt.edu/\",\n            children: \"Student Survey Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false);\n  });\n  var surveyCoursesByInstuctor = [].concat(courseList.courses).sort(function (a, b) {\n    return a.lastName > b.lastName ? 1 : -1;\n  }).map(function (course, idx) {\n    console.log(course);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        bg: idx % 2 == 0 ? \"gray.300\" : \"gray.100\",\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: [course.department, \" \", course.courseNumber, \",\", course.displayName, \", Intsructor: \", course.coordinator.firstName, \" \", course.coordinator.lastName, \", Survey Link:\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"teal\",\n            href: \"https://www.unt.edu/\",\n            children: \"Student Survey Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, _this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false);\n  });\n  useEffect(function () {\n    getNewCourses();\n  }, []);\n  var show = isOn;\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        borderWidth: \"2px\",\n        rounded: \"lg\",\n        alignItems: \"center\",\n        m: \"1em\",\n        p: \"3em\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"striped\",\n          colorScheme: \"green\",\n          padding: \"1em\",\n          children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n            placement: \"top\",\n            fontWeight: \"bold\",\n            fontSize: \"xl\",\n            children: \"GenerateStudentSurveys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleOn,\n            mb: \"1em\",\n            children: \"Sort by Course Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: surveyCoursesByInstuctor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (!show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        borderWidth: \"2px\",\n        rounded: \"lg\",\n        alignItems: \"center\",\n        m: \"1em\",\n        p: \"3em\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"striped\",\n          colorScheme: \"green\",\n          padding: \"1em\",\n          children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n            placement: \"top\",\n            fontWeight: \"bold\",\n            fontSize: \"xl\",\n            children: \"GenerateStudentSurveys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleOn,\n            mb: \"1em\",\n            children: \"Sort by Course Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: surveyCourses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this);\n  }\n};\n\n_s(GenerateStudentSurveys, \"L8zRIrKdh7uHpTVTQgILm5jXZac=\", false, function () {\n  return [useToggle];\n});\n\n_c = GenerateStudentSurveys;\nexport default GenerateStudentSurveys;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateStudentSurveys\");","map":{"version":3,"sources":["C:/Users/schic/OneDrive/Documents/UNT/Fall_20/4901 Capstone/Capstone Project/Frontend2/components/admin-components/GenerateStudentSurveys.js"],"names":["React","useState","useEffect","Box","Text","Button","List","ListItem","Link","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","getCoursesByDepartment","useToggle","GenerateStudentSurveys","courses","courseList","setCourses","isOn","toggleOn","getNewCourses","newCourseList","console","log","setButtonHandler","setButtonName","surveyCourses","concat","sort","a","b","courseNumber","map","course","idx","department","displayName","coordinator","firstName","lastName","surveyCoursesByInstuctor","show"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  Link,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nimport { getCoursesByDepartment } from \"../../api/APIHelper\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nconst GenerateStudentSurveys = () => {\r\n  const [courseList, setCourses] = useState({ courses: [] });\r\n  const [isOn, toggleOn] = useToggle();\r\n  const getNewCourses = async () => {\r\n    const newCourseList = await getCoursesByDepartment(\"CSCE\");\r\n    setCourses({\r\n      ...courseList,\r\n      courses: newCourseList,\r\n    });\r\n    console.log(courseList.courses);\r\n  };\r\n  const setButtonHandler = () => {\r\n    setButtonName(\"Sort by Course Number\");\r\n  };\r\n  const surveyCourses = []\r\n    .concat(courseList.courses)\r\n    .sort((a, b) => (a.courseNumber > b.courseNumber ? 1 : -1))\r\n    .map((course, idx) => {\r\n      return (\r\n        <>\r\n          <Tr key={idx} bg={idx % 2 == 0 ? \"gray.300\" : \"gray.100\"}>\r\n            <Td>\r\n              {course.department} {course.courseNumber},{course.displayName},\r\n              Intsructor: {course.coordinator.firstName}{\" \"}\r\n              {course.coordinator.lastName}, Survey Link:{\" \"}\r\n              <Link color=\"teal\" href=\"https://www.unt.edu/\">\r\n                Student Survey Link\r\n              </Link>\r\n            </Td>\r\n            <br></br>\r\n          </Tr>\r\n        </>\r\n      );\r\n    });\r\n\r\n  const surveyCoursesByInstuctor = []\r\n    .concat(courseList.courses)\r\n    .sort((a, b) => (a.lastName > b.lastName ? 1 : -1))\r\n    .map((course, idx) => {\r\n      console.log(course);\r\n      return (\r\n        <>\r\n          <Tr key={idx} bg={idx % 2 == 0 ? \"gray.300\" : \"gray.100\"}>\r\n            <Td>\r\n              {course.department} {course.courseNumber},{course.displayName},\r\n              Intsructor: {course.coordinator.firstName}{\" \"}\r\n              {course.coordinator.lastName}, Survey Link:{\" \"}\r\n              <Link color=\"teal\" href=\"https://www.unt.edu/\">\r\n                Student Survey Link\r\n              </Link>\r\n            </Td>\r\n            <br></br>\r\n          </Tr>\r\n        </>\r\n      );\r\n    });\r\n  useEffect(() => {\r\n    getNewCourses();\r\n  }, []);\r\n  const show = isOn;\r\n  if (show) {\r\n    return (\r\n      <div id=\"top\">\r\n        <Box borderWidth=\"2px\" rounded=\"lg\" alignItems=\"center\" m=\"1em\" p=\"3em\">\r\n        <Table variant=\"striped\" colorScheme=\"green\" padding=\"1em\">\r\n        <TableCaption placement=\"top\" fontWeight=\"bold\" fontSize=\"xl\">GenerateStudentSurveys</TableCaption>\r\n              <Button onClick={toggleOn} mb=\"1em\">\r\n                Sort by Course Number\r\n              </Button>\r\n              <Tbody>{surveyCoursesByInstuctor}</Tbody>\r\n          </Table>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n  if (!show) {\r\n    return (\r\n      <div id=\"top\">\r\n        <Box borderWidth=\"2px\" rounded=\"lg\" alignItems=\"center\" m=\"1em\" p=\"3em\">\r\n        <Table variant=\"striped\" colorScheme=\"green\" padding=\"1em\">\r\n        <TableCaption placement=\"top\" fontWeight=\"bold\" fontSize=\"xl\">GenerateStudentSurveys</TableCaption>\r\n              <Button onClick={toggleOn} mb=\"1em\">\r\n                Sort by Course Number\r\n              </Button>\r\n              <Tbody>{surveyCourses}</Tbody>\r\n          </Table>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default GenerateStudentSurveys;\r\n\r\n"]},"metadata":{},"sourceType":"module"}