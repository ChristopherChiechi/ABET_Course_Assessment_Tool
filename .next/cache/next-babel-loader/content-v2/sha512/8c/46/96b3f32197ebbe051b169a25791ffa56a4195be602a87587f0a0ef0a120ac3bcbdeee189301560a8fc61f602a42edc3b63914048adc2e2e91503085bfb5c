{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js\";\nimport { useState, useEffect } from \"react\";\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\n\nconst OutcomeMapping = () => {\n  const programs = programData.programs;\n  const {\n    0: option,\n    1: setOption\n  } = useState();\n  const {\n    0: studentOutcomes,\n    1: setStudentOutcomes\n  } = useState();\n  const {\n    0: outcomeMapping,\n    1: setOutcomeMapping\n  } = useState();\n  const {\n    0: setSelectedProgram,\n    1: selectedProgram\n  } = useState({});\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs);\n  }, []);\n  useEffect(() => {\n    if (option != null) {\n      const selelected = studentOutcomes.filter(program => program.name == option)[0];\n      setSelectedProgram(\"selelected\");\n      console.log(selectedProgram);\n      const numOfStudentOutcomes = selectedProgram.outcomes.length;\n      const courseOutcomesArray = courseData.courses.map(course => {\n        return {\n          name: course.name,\n          code: course.code,\n          outcomes: course['course-outcomes'].map(outcome => {\n            return {\n              outcome: outcome,\n              studentMap: new Array(numOfStudentOutcomes).fill(0)\n            };\n          })\n        };\n      });\n      setOutcomeMapping(courseOutcomesArray);\n    }\n  }, [option]);\n\n  const handleSetOption = e => {\n    setOption(e.target.value);\n  };\n\n  const renderOptions = studentOutcomes && studentOutcomes.map(program => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: program.name,\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  });\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map(course => {\n    return /*#__PURE__*/_jsxDEV(CourseOutcomeTable, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 8\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"80%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        mt: \"1em\",\n        children: \"Student Outcome Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        mt: \"1em\",\n        w: \"80%\",\n        id: \"course\",\n        placeholder: \"Select program\",\n        variant: \"filled\",\n        onChange: handleSetOption,\n        value: option,\n        children: renderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default OutcomeMapping;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js"],"names":["useState","useEffect","VStack","Text","Select","StudentOutcomeList","programData","courseData","CourseOutcomeTable","OutcomeMapping","programs","option","setOption","studentOutcomes","setStudentOutcomes","outcomeMapping","setOutcomeMapping","setSelectedProgram","selectedProgram","document","getElementById","scrollIntoView","selelected","filter","program","name","console","log","numOfStudentOutcomes","outcomes","length","courseOutcomesArray","courses","map","course","code","outcome","studentMap","Array","fill","handleSetOption","e","target","value","renderOptions","renderMappingTable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\n\nconst OutcomeMapping = () => {\n  const programs = programData.programs;\n\n  const [option, setOption] = useState();\n  const [studentOutcomes, setStudentOutcomes] = useState();\n  const [outcomeMapping, setOutcomeMapping] = useState();\n  const [setSelectedProgram, selectedProgram] = useState({});\n\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs);\n  },[]);\n\n  useEffect(() => {\n    if (option != null ){\n      const selelected = studentOutcomes.filter((program) => program.name == option)[0]\n      setSelectedProgram(\"selelected\");\n      console.log(selectedProgram);\n      const numOfStudentOutcomes = selectedProgram.outcomes.length;\n      \n      const courseOutcomesArray = courseData.courses.map((course) => {\n        return {\n          name :course.name, \n          code: course.code,\n          outcomes: \n            course['course-outcomes'].map((outcome) => {\n              return {\n                outcome: outcome,\n                studentMap: new Array(numOfStudentOutcomes).fill(0)\n              }\n            })\n        }\n      });\n      setOutcomeMapping(courseOutcomesArray);\n    }\n  }, [option])\n\n  const handleSetOption = (e) => {\n    setOption(e.target.value);\n  };\n\n  const renderOptions = studentOutcomes && studentOutcomes.map((program) => {\n    return <option value={program.name}>{program.name}</option>;\n  });\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map((course) => {\n    return <CourseOutcomeTable course={course}/>\n  }) : <div></div>\n\n  return (\n    <>\n      <VStack id=\"top\" w=\"80%\" m=\"0 auto\">\n          <Text fontSize=\"2xl\" fontWeight=\"bold\" mt=\"1em\">\n            Student Outcome Mapping\n          </Text>\n          <Select\n            mt=\"1em\"\n            w=\"80%\"\n            id=\"course\"\n            placeholder=\"Select program\"\n            variant=\"filled\"\n            onChange={handleSetOption}\n            value={option}\n          >\n            {/* this should be filled with a list of courses from db */}\n            {renderOptions}\n          </Select>\n        <div>\n          {option \n            ? \n              <div>\n                {/* <StudentOutcomeList selectedProgram={selectedProgram} />\n                {renderMappingTable} */}\n              </div>\n            : \n              <div></div>\n          }\n        </div>\n      </VStack>\n    </>\n  );\n};\n\nexport default OutcomeMapping;\n"]},"metadata":{},"sourceType":"module"}