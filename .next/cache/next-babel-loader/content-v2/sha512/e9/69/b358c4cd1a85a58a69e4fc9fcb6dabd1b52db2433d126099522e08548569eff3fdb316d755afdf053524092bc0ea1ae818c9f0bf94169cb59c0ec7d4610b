{"ast":null,"code":"import API from './api';\nexport function getCourses() {\n  return courses;\n}\n;\nexport async function getInstructorCourses(id, term) {\n  let api_helper = new API();\n  let response = api_helper.getCourses(id, term.semester, term.year);\n  response.then(function (result) {\n    return result;\n  });\n  const instructorCourses = await response;\n  instructorCourses.filter(course => course.instructor.id === id);\n  return instructorCourses;\n}\n;\nexport async function getCoordinatorCourses(id, term) {\n  let api_helper = new API();\n  let response = api_helper.getCourses(id, term.semester, term.year);\n  response.then(function (result) {\n    return result;\n  });\n  const coordinatorCourses = await response;\n  coordinatorCourses.filter(course => course.coordinator.id === id);\n  return coordinatorCourses;\n}\n;\nexport async function getFormBySection(id, year, semester, department, course, section) {\n  let api_helper = new API();\n  let response = api_helper.getFormBySection(id, year, semester, department, course, section);\n  response.then(function (result) {\n    return result;\n  });\n  const formData = await response;\n  return formData;\n}\nexport async function postCoordinatorComment(userid, year, semester, department, courseNumber, coordinatorComment, isCourseCompleted) {\n  let api_helper = new API();\n  let response = api_helper.postComment(userid, year, semester, department, courseNumber, coordinatorComment, isCourseCompleted);\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n}\nexport async function postInstructorForm(userid, year, semester, department, courseNumber, sectionNumber, isSectionCompleted, outcomes, ITGrades, CSGrades, CEGrades) {\n  let api_helper = new API();\n  let response = api_helper.postForm(userid, year, semester, department, courseNumber, sectionNumber, isSectionCompleted, outcomes, ITGrades, CSGrades, CEGrades);\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n}\nexport async function login(userid, password) {\n  let api_helper = new API();\n  let response = api_helper.login(userid, password);\n  console.log(response);\n  return response.then(function (result) {\n    return result;\n  });\n}\nexport async function getAllCourses(userid, semester, year) {\n  let api_helper = new API();\n  let response = api_helper.getAllCourses(userid, semester, parseInt(year));\n  response.then(function (result) {\n    return result;\n  });\n  const courses = await response;\n  console.log(courses);\n  return courses;\n}\nexport async function getFacultyList() {\n  let api_helper = new API();\n  let response = api_helper.getFacultyList();\n  response.then(function (result) {\n    return result;\n  });\n  const faculty = await response;\n  return faculty;\n}\nexport async function getCoursesByDepartment(department) {\n  let api_helper = new API();\n  let response = api_helper.getCoursesByDepartment(department);\n  response.then(function (result) {\n    return result;\n  });\n  const courses = await response;\n  return courses;\n}\nexport async function addFacultyMember(lastName, firstName, id, type) {\n  let api_helper = new API();\n  let response = api_helper.addFacultyMember(firstName, lastName, id, type);\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n}\nexport async function addCourse(userid = \"\", firstName = \"\", lastName = \"\", year = 0, semester = \"\", courseNumber = 0, displayName = \"\", department = \"\") {\n  let api_helper = new API();\n  let response = api_helper.addCourse(userid, firstName, lastName, year, semester, courseNumber, displayName, department);\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n}\nexport async function removeCourse(year, semester, courseNumber, department) {\n  let api_helper = new API();\n  let response = api_helper.removeCourse(year, semester, courseNumber, department);\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n  console.log(courseNumber);\n}\nexport async function postCourseOutcomes() {}","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/api/APIHelper.js"],"names":["API","getCourses","courses","getInstructorCourses","id","term","api_helper","response","semester","year","then","result","instructorCourses","filter","course","instructor","getCoordinatorCourses","coordinatorCourses","coordinator","getFormBySection","department","section","formData","postCoordinatorComment","userid","courseNumber","coordinatorComment","isCourseCompleted","postComment","success","console","log","postInstructorForm","sectionNumber","isSectionCompleted","outcomes","ITGrades","CSGrades","CEGrades","postForm","login","password","getAllCourses","parseInt","getFacultyList","faculty","getCoursesByDepartment","addFacultyMember","lastName","firstName","type","addCourse","displayName","removeCourse","postCourseOutcomes"],"mappings":"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","sourcesContent":["import API from './api';\n\nexport function getCourses(){\n    return(courses);\n};\n\nexport async function getInstructorCourses(id, term){\n    let api_helper = new API();\n    let response = api_helper.getCourses(id, term.semester, term.year);\n\n    response.then(function (result) {\n        return result;\n    });\n    \n    const instructorCourses = await response;\n    instructorCourses.filter(course => course.instructor.id === id);\n    return(instructorCourses);\n};\nexport async function getCoordinatorCourses(id, term){\n    let api_helper = new API();\n    let response = api_helper.getCourses(id, term.semester, term.year);\n\n    response.then(function (result) {\n        return result;\n    });\n    \n    const coordinatorCourses = await response;\n    coordinatorCourses.filter(course => course.coordinator.id === id);\n    return(coordinatorCourses);\n};\n\nexport async function getFormBySection(id, year, semester, department, course, section){\n    let api_helper = new API();\n    let response = api_helper.getFormBySection(id, year, semester, department, course, section);\n    response.then(function (result){\n        return result\n    });\n    const formData = await response;\n    return formData;\n}\n\nexport async function postCoordinatorComment(userid, year, semester, department, courseNumber, coordinatorComment, isCourseCompleted){\n    let api_helper = new API();\n    let response = api_helper.postComment(userid, year, semester, department, courseNumber, coordinatorComment, isCourseCompleted);\n    response.then(function(result){\n        return result\n    });\n    const success = await response;\n    console.log(success);\n}\n\nexport async function postInstructorForm(userid, year, semester, department, courseNumber, sectionNumber, isSectionCompleted, outcomes, ITGrades, CSGrades, CEGrades){\n    let api_helper = new API();\n    let response = api_helper.postForm(userid, year, semester, department, courseNumber, sectionNumber, isSectionCompleted, outcomes, ITGrades, CSGrades, CEGrades);\n    response.then(function(result){\n        return result\n    });\n    const success = await response;\n    console.log(success);\n}\n\nexport async function login(userid, password){\n    let api_helper = new API();\n    let response = api_helper.login(userid, password);\n    console.log(response);\n    return response.then(function(result){\n        return result\n    });\n}\n\nexport async function getAllCourses(userid, semester, year){\n    let api_helper = new API();\n    let response = api_helper.getAllCourses(userid, semester, parseInt(year));\n    response.then(function (result) {\n        return result;\n    });\n    const courses = await response;\n    console.log(courses);\n    return courses;\n}\n\nexport async function getFacultyList(){\n    let api_helper = new API();\n    let response = api_helper.getFacultyList();\n    response.then(function (result){\n        return result;\n    });\n\n    const faculty = await response;\n    return faculty;\n\n}\n\nexport async function getCoursesByDepartment(department){\n    let api_helper = new API();\n    let response = api_helper.getCoursesByDepartment(department);\n    response.then(function (result){\n        return result;\n    })\n    const courses = await response;\n    return courses;\n}\n\nexport async function addFacultyMember(lastName, firstName, id, type){\n    let api_helper = new API();\n    let response = api_helper.addFacultyMember(firstName, lastName, id, type);\n    response.then(function (result){\n        return result;\n    });\n\n    const success = await response;\n    console.log(success);\n}\n\nexport async function addCourse(userid = \"\", firstName = \"\", lastName = \"\", year = 0, semester = \"\", courseNumber = 0, displayName = \"\", department = \"\"){\n    let api_helper = new API();\n    let response = api_helper.addCourse(userid, firstName, lastName, year, semester, courseNumber, displayName, department);\n    response.then(function (result){\n        return result;\n    })\n    const success = await response;\n    console.log(success);\n}\nexport async function removeCourse(year, semester, courseNumber, department) {\n  let api_helper = new API();\n  let response = api_helper.removeCourse(\n    year,\n    semester,\n    courseNumber,\n    department\n  );\n  response.then(function (result) {\n    return result;\n  });\n  const success = await response;\n  console.log(success);\n  console.log(courseNumber);\n}\n\nexport async function postCourseOutcomes() {\n\n}"]},"metadata":{},"sourceType":"module"}