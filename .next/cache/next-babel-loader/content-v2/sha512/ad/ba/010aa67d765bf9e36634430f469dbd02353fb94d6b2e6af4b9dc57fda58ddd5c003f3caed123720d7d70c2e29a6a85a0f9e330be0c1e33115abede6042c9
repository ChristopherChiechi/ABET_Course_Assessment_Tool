{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/CourseOutcomeTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Box, Button, Text, HStack, Table, Tbody, Tr, Td, Center, Checkbox } from \"@chakra-ui/react\";\nimport CheckBoxGroup from \"./CheckboxGroup\";\n\nvar CourseOutcomeTable = function CourseOutcomeTable(_ref) {\n  _s();\n\n  var course = _ref.course;\n\n  var _useState = useState(course.outcomes),\n      outcomes = _useState[0],\n      setOutcomes = _useState[1];\n\n  var _useState2 = useState(course.outcomes.studentMap),\n      checkArray = _useState2[0],\n      setCheckArray = _useState2[1];\n\n  console.log(course);\n\n  var HandleCheck = function HandleCheck(idx) {\n    // var temp = checkArray;\n    // temp[idx] = (temp[idx] === 0) ? 1 : 0;\n    // setCheckArray(temp);\n    console.log(checkArray);\n  };\n\n  function handleCourseUpdate(courseIdx, studentIdx) {\n    var temp = outcomes;\n    var checkValue = temp[courseIdx].studentMap[studentIdx];\n    temp[courseIdx].studentMap[studentIdx] = checkValue === 0 ? 1 : 0;\n    setOutcomes(temp);\n  }\n\n  var rows = outcomes ? outcomes.map(function (outcome, courseIdx) {\n    return /*#__PURE__*/_jsxDEV(Tr, {\n      children: /*#__PURE__*/_jsxDEV(Td, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [courseIdx + 1, \". \", outcome.outcome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Center, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mt: \"1em\",\n            children: \"Maps to: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CheckBoxGroup, {\n            studentMap: outcome.studentMap\n          }, courseIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)\n    }, courseIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 8\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"0 auto\",\n    w: \"80rem\",\n    padding: \"2em\",\n    bg: \"#edf2f7\",\n    mt: \"2em\",\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      textAlign: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: course.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#38A169\",\n        fontWeight: \"bold\",\n        children: course.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Table, {\n      padding: \"1em\",\n      w: \"90%\",\n      bg: \"white\",\n      borderRadius: \"8px\",\n      children: /*#__PURE__*/_jsxDEV(Tbody, {\n        children: course.outcomes.map(function (outcome, courseIdx) {\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            children: /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [courseIdx + 1, \". \", outcome.outcome]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Center, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  mt: \"1em\",\n                  children: \"Maps to: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(HStack, {\n                  w: \"90%\",\n                  spacing: 8,\n                  justify: \"center\",\n                  children: outcome.studentMap.map(function (value, idx) {\n                    return /*#__PURE__*/_jsxDEV(Checkbox, {\n                      value: value,\n                      onChange: function onChange(e) {\n                        e.preventDefault();\n                        HandleCheck(idx);\n                      },\n                      children: idx + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 31\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, _this)\n          }, courseIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"sm\",\n      colorScheme: \"teal\",\n      mt: \"1em\",\n      children: \"Update Course Mapping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(CourseOutcomeTable, \"Lhxv1b/tzdpgki0X1rbRqyPD4M4=\");\n\n_c = CourseOutcomeTable;\nexport default CourseOutcomeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseOutcomeTable\");","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/CourseOutcomeTable.js"],"names":["useState","Box","Button","Text","HStack","Table","Tbody","Tr","Td","Center","Checkbox","CheckBoxGroup","CourseOutcomeTable","course","outcomes","setOutcomes","studentMap","checkArray","setCheckArray","console","log","HandleCheck","idx","handleCourseUpdate","courseIdx","studentIdx","temp","checkValue","rows","map","outcome","name","code","value","e","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Text,\n  HStack,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Center,\n  Checkbox\n} from \"@chakra-ui/react\";\nimport CheckBoxGroup from \"./CheckboxGroup\";\n\nconst CourseOutcomeTable = ({ course }) => {\n  const [outcomes, setOutcomes] = useState(course.outcomes);\n  const [checkArray, setCheckArray] = useState(course.outcomes.studentMap);\n  console.log(course);\n  const HandleCheck = (idx) => {\n    // var temp = checkArray;\n    // temp[idx] = (temp[idx] === 0) ? 1 : 0;\n    // setCheckArray(temp);\n    console.log(checkArray);\n  }\n\n  function handleCourseUpdate( courseIdx, studentIdx ){\n    var temp = outcomes;\n    const checkValue = temp[courseIdx].studentMap[studentIdx];\n    temp[courseIdx].studentMap[studentIdx] = (checkValue === 0) ? 1 : 0;\n    setOutcomes(temp);\n  }\n\n  const rows = outcomes ? outcomes.map((outcome, courseIdx) => {\n    return (\n      <Tr key={courseIdx}>\n        <Td>\n          <Text>{courseIdx+1}. {outcome.outcome}</Text>\n          <br/>\n          <Center>\n            <Text mt=\"1em\">Maps to: </Text>\n            <CheckBoxGroup studentMap={outcome.studentMap} key={courseIdx}/>\n          </Center>\n        </Td>\n      </Tr>\n    )\n  }) : <div></div>\n\n  \n\n  return( \n      <Box  m=\"0 auto\" w=\"80rem\" padding=\"2em\" bg=\"#edf2f7\" mt=\"2em\">\n        <HStack textAlign=\"left\">\n          <Text fontWeight=\"bold\">{course.name}</Text>\n          <Text color=\"#38A169\" fontWeight=\"bold\">{course.code}</Text>\n        </HStack>\n        <Table  padding=\"1em\" w=\"90%\" bg=\"white\" borderRadius=\"8px\">\n          <Tbody>\n            {/* {rows} */}\n            {course.outcomes.map((outcome, courseIdx) => {\n                return (\n                  <Tr key={courseIdx}>\n                    <Td>\n                      <Text>{courseIdx+1}. {outcome.outcome}</Text>\n                      <br/>\n                      <Center>\n                        <Text mt=\"1em\">Maps to: </Text>\n                        {/* <CheckBoxGroup studentMap={outcome.studentMap} key={courseIdx}/> */}\n                        <HStack w=\"90%\" spacing={8} justify=\"center\">\n                          {outcome.studentMap.map((value, idx) => {\n                            return (\n                              <Checkbox\n                                value={value}\n                                onChange={e => {\n                                    e.preventDefault();\n                                    HandleCheck(idx)\n                                  }\n                                }\n                              >\n                                {idx + 1}\n                              </Checkbox>\n                            )\n                          })}\n                        </HStack>\n                      </Center>\n                    </Td>\n                  </Tr>\n                )\n            })}\n          </Tbody>\n        </Table>\n        <Button size=\"sm\" colorScheme=\"teal\" mt=\"1em\">Update Course Mapping</Button>\n      </Box>\n    );\n};\nexport default CourseOutcomeTable;\n"]},"metadata":{},"sourceType":"module"}