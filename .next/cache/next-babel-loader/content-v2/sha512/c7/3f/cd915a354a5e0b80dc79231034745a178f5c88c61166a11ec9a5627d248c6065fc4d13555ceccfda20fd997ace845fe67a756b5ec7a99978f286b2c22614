{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/instructor-components/TermSelect.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverFooter, PopoverArrow, PopoverCloseButton, Text, Button, Select, Badge, HStack, Vst } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nconst TermSelect = ({\n  parentTerm,\n  setParentTerm\n}) => {\n  const terms = [\"Spring\", \"Summer\", \"Fall\"];\n  const years = [2020];\n  const {\n    0: term,\n    1: setTerm\n  } = useState({\n    semester: 'Fall',\n    year: 2020\n  });\n\n  const handleSemesterChange = e => {\n    setTerm(_objectSpread(_objectSpread({}, term), {}, {\n      semester: e.target.value\n    }));\n  };\n\n  const handleYearChange = e => {\n    setTerm(_objectSpread(_objectSpread({}, term), {}, {\n      year: e.target.value\n    }));\n  };\n\n  const updateTerm = e => {\n    e.preventDefault();\n    setParentTerm({\n      semester: term.semester,\n      year: term.year\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"Showing forms for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: \"teal\",\n        fontSize: \"lg\",\n        children: [parentTerm.semester, \" \", parentTerm.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      children: ({\n        onClose\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mb: \"3em\",\n            colorScheme: \"teal\",\n            size: \"lg\",\n            children: \"Change Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n          children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PopoverCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n            padding: \"2em\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"semester\",\n              variant: \"filled\",\n              value: term.semester,\n              onChange: handleSemesterChange,\n              children: terms.map((term, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: term,\n                  children: term\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"year\",\n              mt: \"1em\",\n              variant: \"filled\",\n              value: term.year,\n              onChange: handleYearChange,\n              children: years.map((year, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: year,\n                  children: year\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 67\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              float: \"right\",\n              mt: \"1em\",\n              colorScheme: \"teal\",\n              onClick: e => {\n                e.preventDefault();\n                term.semester && term.year && setParentTerm({\n                  semester: term.semester,\n                  year: term.year\n                });\n                onClose();\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default TermSelect;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/instructor-components/TermSelect.js"],"names":["Popover","PopoverTrigger","PopoverContent","PopoverHeader","PopoverBody","PopoverFooter","PopoverArrow","PopoverCloseButton","Text","Button","Select","Badge","HStack","Vst","useState","TermSelect","parentTerm","setParentTerm","terms","years","term","setTerm","semester","year","handleSemesterChange","e","target","value","handleYearChange","updateTerm","preventDefault","onClose","map","idx"],"mappings":"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","sourcesContent":["import {\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    Text,\n    Button,\n    Select,\n    Badge,\n    HStack,\n    Vst\n  } from \"@chakra-ui/react\"\nimport { useState } from \"react\";\n\nconst TermSelect = ({parentTerm, setParentTerm}) => {\n    \n    const terms = [\"Spring\", \"Summer\", \"Fall\"];\n    const years = [2020];\n\n    const [term, setTerm] = useState({\n        semester: 'Fall',\n        year: 2020\n    });\n\n    const handleSemesterChange = (e) => {\n        setTerm({\n            ...term, \n            semester: e.target.value\n        })\n    }\n    const handleYearChange = (e) => {\n        setTerm({\n            ...term, \n            year: e.target.value\n        })\n    }\n\n    const updateTerm = (e) => {\n        e.preventDefault();\n        setParentTerm({\n            semester: term.semester,\n            year: term.year\n        });\n    }\n\n    return(\n        <>\n            <HStack>\n                    <Text>Showing forms for</Text>\n                    <Badge colorScheme=\"teal\" fontSize=\"lg\">{parentTerm.semester} {parentTerm.year}</Badge>\n            </HStack>\n            <Popover>\n                {({ onClose }) => (\n                <>\n                    <PopoverTrigger>\n                        {<Button mb=\"3em\" colorScheme=\"teal\" size=\"lg\">\n                            Change Term\n                </Button>}\n                    </PopoverTrigger>\n                    <PopoverContent>\n                        <PopoverArrow />\n                        <PopoverCloseButton />\n                        <PopoverBody padding=\"2em\">\n                            <Select placeholder=\"semester\" variant=\"filled\" value={term.semester} onChange={handleSemesterChange}>\n                                {terms.map((term, idx) => {\n                                    return <option value={term} key={idx}>{term}</option>\n                                    })}\n                            </Select>\n                            <Select placeholder=\"year\" mt=\"1em\" variant=\"filled\" value={term.year} onChange={handleYearChange}>\n                                {years.map((year, idx) => {return <option value={year} key={idx}>{year}</option>})}\n                            </Select>\n                            <Button \n                                float=\"right\" \n                                mt=\"1em\" \n                                colorScheme=\"teal\" \n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    (term.semester && term.year) && setParentTerm({\n                                        semester: term.semester,\n                                        year: term.year\n                                    })\n                                    onClose();\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </PopoverBody>\n                    </PopoverContent>\n                </>\n                )}\n            </Popover>\n        </>\n    )\n}\n\nexport default TermSelect;"]},"metadata":{},"sourceType":"module"}