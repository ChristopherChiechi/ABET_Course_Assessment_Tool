{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from 'react';\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue } from 'recoil';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport { coursesAtom } from './recoilStore';\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\nimport { getAllCourses } from '../../../api/APIHelper';\nimport TableGroup from \"./TableGroup\";\nvar OutcomeMapping = /*#__PURE__*/React.memo(_c = _s(function () {\n  _s();\n\n  var programs = programData.programs;\n\n  var _useState = useState(),\n      selectedProgram = _useState[0],\n      setSelectedProgram = _useState[1];\n\n  var _useState2 = useState(),\n      studentOutcomes = _useState2[0],\n      setStudentOutcomes = _useState2[1];\n\n  var _useState3 = useState(),\n      outcomeMapping = _useState3[0],\n      setOutcomeMapping = _useState3[1];\n\n  var _useRecoilState = useRecoilState(coursesAtom),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      courses = _useRecoilState2[0],\n      setCourses = _useRecoilState2[1];\n\n  var getCourses = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var courses;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllCourses(\"MT2020\", \"fall\", 2020);\n\n            case 2:\n              courses = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getCourses() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs); //getCourses();\n  }, []); // useEffect(() => {\n  //   if (selectedProgram != null ){\n  //     const numOfStudentOutcomes = selectedProgram.outcomes.length;\n  //     const courseOutcomesArray = courseData.courses.map((course) => {\n  //       return {\n  //         name :course.name, \n  //         code: course.code,\n  //         outcomes: \n  //           course['course-outcomes'].map((outcome) => {\n  //             return {\n  //               outcome: outcome,\n  //               studentMap: new Array(numOfStudentOutcomes).fill(0)\n  //             }\n  //           })\n  //       }\n  //     });\n  //     setOutcomeMapping(courseOutcomesArray);\n  //     setCourses(outcomeMapping);\n  //   }\n  // }, [selectedProgram]);\n  // useEffect(() => {\n  //  // console.log(outcomeMapping);\n  // }, [outcomeMapping]);\n\n  var handleSetOption = function handleSetOption(e) {\n    var selection = programs.filter(function (program) {\n      return program.name == e.target.value;\n    })[0];\n    setSelectedProgram(selection);\n    var numOfStudentOutcomes = selection.outcomes.length;\n    var courseOutcomesArray = courseData.courses.map(function (course) {\n      return {\n        name: course.name,\n        code: course.code,\n        outcomes: course['course-outcomes'].map(function (outcome) {\n          return {\n            outcome: outcome,\n            studentMap: new Array(numOfStudentOutcomes).fill(0)\n          };\n        })\n      };\n    });\n    setOutcomeMapping(courseOutcomesArray);\n    setCourses(courseOutcomesArray);\n  };\n\n  var handleCheck = function handleCheck(course, idx) {};\n\n  var renderOptions = studentOutcomes && studentOutcomes.map(function (program, idx) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: program.name,\n      children: program.name\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, _this);\n  });\n  var renderMappingTable = outcomeMapping ? outcomeMapping.map(function (course, idx) {\n    return /*#__PURE__*/_jsxDEV(CourseOutcomeTable, {\n      course: course\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, _this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(RecoilRoot, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"80%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        mt: \"1em\",\n        children: \"Student Outcome Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        mt: \"1em\",\n        w: \"80%\",\n        id: \"course\",\n        placeholder: \"Select Program\",\n        variant: \"filled\",\n        onChange: handleSetOption,\n        children: renderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedProgram ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StudentOutcomeList, {\n            selectedProgram: selectedProgram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, _this), outcomeMapping ? /*#__PURE__*/_jsxDEV(TableGroup, {\n            courseData: outcomeMapping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, _this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, _this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n}, \"xsH8P3REd4RlqTFzriItHY89qgQ=\", false, function () {\n  return [useRecoilState];\n}));\n_c2 = OutcomeMapping;\nexport default OutcomeMapping;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OutcomeMapping$React.memo\");\n$RefreshReg$(_c2, \"OutcomeMapping\");","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js"],"names":["useState","useEffect","React","VStack","Text","Select","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","StudentOutcomeList","programData","courseData","coursesAtom","CourseOutcomeTable","getAllCourses","TableGroup","OutcomeMapping","memo","programs","selectedProgram","setSelectedProgram","studentOutcomes","setStudentOutcomes","outcomeMapping","setOutcomeMapping","courses","setCourses","getCourses","document","getElementById","scrollIntoView","handleSetOption","e","selection","filter","program","name","target","value","numOfStudentOutcomes","outcomes","length","courseOutcomesArray","map","course","code","outcome","studentMap","Array","fill","handleCheck","idx","renderOptions","renderMappingTable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from 'react';\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\n\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport { coursesAtom } from './recoilStore';\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\nimport { getAllCourses } from '../../../api/APIHelper';\nimport TableGroup from \"./TableGroup\";\n\nconst OutcomeMapping = React.memo(() => {\n  const programs = programData.programs;\n\n  const [selectedProgram, setSelectedProgram] = useState();\n  const [studentOutcomes, setStudentOutcomes] = useState();\n  const [outcomeMapping, setOutcomeMapping] = useState();\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n\n  const getCourses = async () => {\n    const courses = await getAllCourses(\"MT2020\", \"fall\", 2020)\n    // console.log(course);\n  }\n\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs);\n    //getCourses();\n  }, []);\n\n  // useEffect(() => {\n  //   if (selectedProgram != null ){\n  //     const numOfStudentOutcomes = selectedProgram.outcomes.length;\n\n  //     const courseOutcomesArray = courseData.courses.map((course) => {\n  //       return {\n  //         name :course.name, \n  //         code: course.code,\n  //         outcomes: \n  //           course['course-outcomes'].map((outcome) => {\n  //             return {\n  //               outcome: outcome,\n  //               studentMap: new Array(numOfStudentOutcomes).fill(0)\n  //             }\n  //           })\n  //       }\n  //     });\n  //     setOutcomeMapping(courseOutcomesArray);\n  //     setCourses(outcomeMapping);\n  //   }\n  // }, [selectedProgram]);\n\n  // useEffect(() => {\n  //  // console.log(outcomeMapping);\n  // }, [outcomeMapping]);\n  \n  const handleSetOption = (e) => {\n    const selection = programs.filter((program) => program.name == e.target.value)[0];\n    setSelectedProgram(selection);\n    const numOfStudentOutcomes = selection.outcomes.length;\n    const courseOutcomesArray = courseData.courses.map((course) => {\n      return {\n        name: course.name,\n        code: course.code,\n        outcomes:\n          course['course-outcomes'].map((outcome) => {\n            return {\n              outcome: outcome,\n              studentMap: new Array(numOfStudentOutcomes).fill(0)\n            }\n          })\n      }\n    });\n    setOutcomeMapping(courseOutcomesArray);\n    setCourses(courseOutcomesArray);\n  };\n\n  const handleCheck = (course, idx) => {\n\n  }\n\n  const renderOptions = studentOutcomes && studentOutcomes.map((program, idx) => {\n    return <option value={program.name} key={idx}>{program.name}</option>;\n  });\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map((course, idx) => {\n    return <CourseOutcomeTable course={course} key={idx} />\n  }) : null;\n\n  return (\n    <RecoilRoot>\n      <VStack id=\"top\" w=\"80%\" m=\"0 auto\">\n        <Text fontSize=\"2xl\" fontWeight=\"bold\" mt=\"1em\">\n          Student Outcome Mapping\n          </Text>\n        <Select\n          mt=\"1em\"\n          w=\"80%\"\n          id=\"course\"\n          placeholder=\"Select Program\"\n          variant=\"filled\"\n          onChange={handleSetOption}\n        >\n          {/* this should be filled with a list of courses from db */}\n          {renderOptions}\n        </Select>\n        <div>\n          {selectedProgram ?\n            <div>\n              <StudentOutcomeList selectedProgram={selectedProgram} />\n              {/* {renderMappingTable} */}\n              {outcomeMapping ?\n                <TableGroup courseData={outcomeMapping} />\n                : null\n              }\n            </div>\n            : null\n          }\n        </div>\n      </VStack>\n    </RecoilRoot>\n  );\n});\n\nexport default OutcomeMapping;\n"]},"metadata":{},"sourceType":"module"}