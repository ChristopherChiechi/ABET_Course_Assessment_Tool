{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\nimport { getAllCourses } from '../../../api/APIHelper';\n\nvar OutcomeMapping = function OutcomeMapping() {\n  _s();\n\n  var programs = programData.programs;\n\n  var _useState = useState(),\n      selectedProgram = _useState[0],\n      setSelectedProgram = _useState[1];\n\n  var _useState2 = useState(),\n      studentOutcomes = _useState2[0],\n      setStudentOutcomes = _useState2[1];\n\n  var _useState3 = useState(),\n      outcomeMapping = _useState3[0],\n      setOutcomeMapping = _useState3[1];\n\n  var getCourses = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var courses;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllCourses(\"MT2020\", \"fall\", 2020);\n\n            case 2:\n              courses = _context.sent;\n              console.log(course);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getCourses() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs); //getCourses();\n  }, []);\n  useEffect(function () {\n    if (selectedProgram != null) {\n      console.log(selectedProgram); //const numOfStudentOutcomes = selectedProgram.outcomes.length;\n      // const courseOutcomesArray = courseData.courses.map((course) => {\n      //   return {\n      //     name :course.name, \n      //     code: course.code,\n      //     outcomes: \n      //       course['course-outcomes'].map((outcome) => {\n      //         return {\n      //           outcome: outcome,\n      //           studentMap: new Array(numOfStudentOutcomes).fill(0)\n      //         }\n      //       })\n      //   }\n      // });\n      // setOutcomeMapping(courseOutcomesArray);\n    }\n  }, [selectedProgram]);\n\n  var handleSetOption = function handleSetOption(e) {\n    console.log(e.target.value);\n    setSelectedProgram(e.target.value);\n    console.log(selectedProgram);\n  };\n\n  var renderOptions = studentOutcomes && studentOutcomes.map(function (program) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: program.name,\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, _this);\n  });\n  var renderMappingTable = outcomeMapping ? outcomeMapping.map(function (course) {\n    return /*#__PURE__*/_jsxDEV(CourseOutcomeTable, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, _this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 8\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"80%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        mt: \"1em\",\n        children: \"Student Outcome Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        mt: \"1em\",\n        w: \"80%\",\n        id: \"course\",\n        placeholder: \"Select program\",\n        variant: \"filled\",\n        onChange: handleSetOption,\n        value: selectedProgram,\n        children: renderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedProgram && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(OutcomeMapping, \"fCi5E22BhRsQf3BJORxL2MJ9f6s=\");\n\n_c = OutcomeMapping;\nexport default OutcomeMapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutcomeMapping\");","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/OutcomeMapping/OutcomeMapping.js"],"names":["useState","useEffect","VStack","Text","Select","StudentOutcomeList","programData","courseData","CourseOutcomeTable","getAllCourses","OutcomeMapping","programs","selectedProgram","setSelectedProgram","studentOutcomes","setStudentOutcomes","outcomeMapping","setOutcomeMapping","getCourses","courses","console","log","course","document","getElementById","scrollIntoView","handleSetOption","e","target","value","renderOptions","map","program","name","renderMappingTable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { VStack, Text, Select } from '@chakra-ui/react';\nimport StudentOutcomeList from \"./StudentOutcomeList\";\nimport programData from \"../../../fake-data/programs.json\";\nimport courseData from \"../../../fake-data/course.json\";\nimport CourseOutcomeTable from \"./CourseOutcomeTable\";\nimport { getAllCourses } from '../../../api/APIHelper';\n\nconst OutcomeMapping = () => {\n  const programs = programData.programs;\n\n  const [selectedProgram, setSelectedProgram] = useState();\n  const [studentOutcomes, setStudentOutcomes] = useState();\n  const [outcomeMapping, setOutcomeMapping] = useState();\n\n  const getCourses = async () => {\n    const courses = await getAllCourses(\"MT2020\", \"fall\", 2020)\n    console.log(course);\n  }\n\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n    setStudentOutcomes(programs);\n    //getCourses();\n  },[]);\n\n  useEffect(() => {\n    if (selectedProgram != null ){\n      console.log(selectedProgram);\n      //const numOfStudentOutcomes = selectedProgram.outcomes.length;\n      \n      // const courseOutcomesArray = courseData.courses.map((course) => {\n      //   return {\n      //     name :course.name, \n      //     code: course.code,\n      //     outcomes: \n      //       course['course-outcomes'].map((outcome) => {\n      //         return {\n      //           outcome: outcome,\n      //           studentMap: new Array(numOfStudentOutcomes).fill(0)\n      //         }\n      //       })\n      //   }\n      // });\n      // setOutcomeMapping(courseOutcomesArray);\n    }\n  }, [selectedProgram])\n\n  const handleSetOption = (e) => {\n    console.log(e.target.value);\n    setSelectedProgram(e.target.value);\n    console.log(selectedProgram);\n  };\n\n  const renderOptions = studentOutcomes && studentOutcomes.map((program) => {\n    return <option value={program.name}>{program.name}</option>;\n  });\n  const renderMappingTable = outcomeMapping ? outcomeMapping.map((course) => {\n    return <CourseOutcomeTable course={course}/>\n  }) : <div></div>\n\n  return (\n    <>\n      <VStack id=\"top\" w=\"80%\" m=\"0 auto\">\n          <Text fontSize=\"2xl\" fontWeight=\"bold\" mt=\"1em\">\n            Student Outcome Mapping\n          </Text>\n          <Select\n            mt=\"1em\"\n            w=\"80%\"\n            id=\"course\"\n            placeholder=\"Select program\"\n            variant=\"filled\"\n            onChange={handleSetOption}\n            value={selectedProgram}\n          >\n            {/* this should be filled with a list of courses from db */}\n            {renderOptions}\n          </Select>\n        <div>\n          {selectedProgram \n            &&\n              <div>\n                {/* <StudentOutcomeList selectedProgram={selectedProgram} />\n                {renderMappingTable} */}\n              </div>\n          }\n        </div>\n      </VStack>\n    </>\n  );\n};\n\nexport default OutcomeMapping;\n"]},"metadata":{},"sourceType":"module"}