{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js\";\n//imports\nimport { useState, useContext, useEffect } from \"react\";\nimport { Text, VStack, Button, Box } from \"@chakra-ui/react\"; //hooks\n\nimport useToggle from \"../hooks/useToggle\"; //components\n\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\nimport CourseOutcomesSurvey from \"../components/survey-components/CourseOutcomesSurvey\";\nimport TAsurvey from \"../components/survey-components/TAsurvey\";\nimport StudentFeedback from \"../components/survey-components/StudentFeedback\"; //page data \n\nimport { PageContext, pageData } from '../components/survey-components/SurveyPageData';\n\nconst studentSurvey = () => {\n  const context = useContext(PageContext);\n  const course = context.course; //state\n\n  const [isLoggedIn, toggleLogin] = useToggle(true);\n  const {\n    0: studentInformation,\n    1: setStudentInformation\n  } = useState({\n    major: \"\",\n    classification: \"\",\n    grade: \"\"\n  });\n  const {\n    0: outcomeSurvey,\n    1: setOutcomeSurvey\n  } = useState(context.course['course-outcomes']);\n  const {\n    0: TAquestions,\n    1: setTAquestions\n  } = useState(context.questions);\n  const {\n    0: studentInput,\n    1: setStudentInput\n  } = useState({\n    TAeval: \"\",\n    additionalFeedback: \"\"\n  });\n  useEffect(() => {\n    console.log('ss updated');\n  }, [TAquestions]);\n\n  const testFunction = () => {\n    console.log(studentInformation, outcomeSurvey, TAquestions, studentInput);\n  };\n\n  const handleChange = (rating, idx, type) => {\n    if (type == \"TA\") {\n      var temp = TAquestions;\n      temp[idx].rating = parseInt(rating);\n      setTAquestions([...temp]);\n      console.log(TAquestions[idx]);\n    } else if (type == \"Outcomes\") {\n      var temp = outcomeSurvey;\n      outcomeSurvey[idx].rating = parseInt(rating);\n      setOutcomeSurvey([...temp]);\n      console.log(outcomeSurvey[idx]);\n    } else {\n      console.log(\"incorrect type\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n    value: pageData,\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(VStack, {\n      mt: \"2em\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"80%\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"bold\",\n          children: [course.code, \" \", course.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          fontWeight: \"bold\",\n          color: \"green\",\n          children: \"Student Feedback Survey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentInfoForm, {\n        studentInformation: studentInformation,\n        setStudentInformation: setStudentInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CourseOutcomesSurvey, {\n        outcomeSurvey: outcomeSurvey,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TAsurvey, {\n        TAquestions: TAquestions,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentFeedback, {\n        studentInput: studentInput,\n        setStudentInput: setStudentInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: testFunction,\n        mb: \"1em\",\n        colorScheme: \"green\",\n        children: \"Submit Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StudentLoginBox, {\n      toggleLoggin: toggleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\nexport default studentSurvey;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaanâ€™s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/pages/studentSurvey.js"],"names":["useState","useContext","useEffect","Text","VStack","Button","Box","useToggle","StudentLoginBox","StudentInfoForm","CourseOutcomesSurvey","TAsurvey","StudentFeedback","PageContext","pageData","studentSurvey","context","course","isLoggedIn","toggleLogin","studentInformation","setStudentInformation","major","classification","grade","outcomeSurvey","setOutcomeSurvey","TAquestions","setTAquestions","questions","studentInput","setStudentInput","TAeval","additionalFeedback","console","log","testFunction","handleChange","rating","idx","type","temp","parseInt","code","name"],"mappings":"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","sourcesContent":["//imports\nimport {\n  useState,\n  useContext,\n  useEffect\n} from \"react\";\nimport {\n  Text,\n  VStack,\n  Button,\n  Box\n} from \"@chakra-ui/react\";\n//hooks\nimport useToggle from \"../hooks/useToggle\"\n//components\nimport StudentLoginBox from \"../components/survey-components/StudentLoginBox\";\nimport StudentInfoForm from \"../components/survey-components/StudentInfoForm\";\nimport CourseOutcomesSurvey from \"../components/survey-components/CourseOutcomesSurvey\";\nimport TAsurvey from \"../components/survey-components/TAsurvey\";\nimport StudentFeedback from \"../components/survey-components/StudentFeedback\";\n//page data \nimport { PageContext, pageData } from '../components/survey-components/SurveyPageData';\n\nconst studentSurvey = () => {\n  const context = useContext(PageContext);\n  const course = context.course;\n\n  //state\n  const [isLoggedIn, toggleLogin] = useToggle(true);\n  const [studentInformation, setStudentInformation] = useState({\n    major: \"\",\n    classification: \"\",\n    grade: \"\"\n  });\n  const [outcomeSurvey, setOutcomeSurvey] = useState(context.course['course-outcomes']);\n  const [TAquestions, setTAquestions] = useState(context.questions)\n  const [studentInput, setStudentInput] = useState({\n    TAeval: \"\",\n    additionalFeedback: \"\"\n  })\n\n  useEffect(() => {\n    console.log('ss updated');\n  }, [TAquestions]);\n\n  const testFunction = () => {\n    console.log(studentInformation, outcomeSurvey, TAquestions, studentInput);\n  };\n\n  const handleChange = (rating, idx, type) => {\n    if (type == \"TA\") {\n      var temp = TAquestions;\n      temp[idx].rating = parseInt(rating);\n      setTAquestions([...temp]);\n      console.log(TAquestions[idx]);\n    }\n    else if (type == \"Outcomes\") {\n      var temp = outcomeSurvey;\n      outcomeSurvey[idx].rating = parseInt(rating);\n      setOutcomeSurvey([...temp]);\n      console.log(outcomeSurvey[idx]);\n    }\n    else {\n      console.log(\"incorrect type\");\n    }\n  };\n\n  return (\n    <PageContext.Provider value={pageData}>\n      {isLoggedIn\n        ?\n        <VStack mt=\"2em\">\n\n          <Box w=\"80%\">\n            <Text fontSize=\"2xl\" fontWeight=\"bold\">{course.code} {course.name}</Text>\n            <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"green\">Student Feedback Survey</Text>\n          </Box>\n          <StudentInfoForm studentInformation={studentInformation} setStudentInformation={setStudentInformation} />\n          <CourseOutcomesSurvey outcomeSurvey={outcomeSurvey} handleChange={handleChange} />\n          <TAsurvey TAquestions={TAquestions} handleChange={handleChange} />\n          <StudentFeedback studentInput={studentInput} setStudentInput={setStudentInput} />\n\n          <Button onClick={testFunction} mb=\"1em\" colorScheme=\"green\">Submit Survey</Button>\n        </VStack>\n        :\n        <StudentLoginBox toggleLoggin={toggleLogin} />\n      }\n    </PageContext.Provider>)\n};\nexport default studentSurvey;\n"]},"metadata":{},"sourceType":"module"}