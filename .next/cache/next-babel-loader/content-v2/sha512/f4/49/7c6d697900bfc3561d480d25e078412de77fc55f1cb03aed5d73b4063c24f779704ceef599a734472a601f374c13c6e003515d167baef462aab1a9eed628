{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/armaandhanoa/Documents/Documents - Armaan\\u2019s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/EditCourseList/EditCourseList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Text, Select, Button, IconButton, List, Input, ListItem, Flex, VStack } from \"@chakra-ui/react\";\nimport useInputState from \"../../../hooks/useInputState\";\nimport fakeData from \"../../../fake-data/course.json\";\nimport Courses from \"../../Courses\";\nimport { getCoursesByDepartment, addCourse, removeCourse } from \"../../../api/APIHelper\";\nimport AddCourse from \"./AddCourse\";\n\nconst EditCourseList = () => {\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n  }); // State of the courses and function to set the new state.\n\n  const {\n    0: theCourse,\n    1: setNewCourses\n  } = useState({\n    courses: []\n  });\n  const {\n    0: newCourse,\n    1: addNewCourse\n  } = useState({\n    firstName: \"\",\n    userid: \"\",\n    lastName: \"\",\n    year: 0,\n    semester: \"\",\n    courseNumber: \"\",\n    displayName: \"\",\n    department: \"\"\n  }); // State of the department choices and function to set the new state.\n\n  const {\n    0: theDepartment,\n    1: setNewDepartment\n  } = useState({\n    value: \"CSCE\"\n  }); // Grabs the courses by department from the back-end.\n\n  const getNewCourses = async () => {\n    const newCourseList = await getCoursesByDepartment(theDepartment.value);\n    setNewCourses(_objectSpread(_objectSpread({}, theCourse), {}, {\n      courses: newCourseList\n    }));\n    console.log(theCourse.courses);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (window.confirm(\"Are you sure you would like to submit these changes?\")) {\n      //POST the course list change to the db here\n      alert(\"Course List Updated!\");\n    }\n  }; // Sets the department state to the value of the department selected.\n\n\n  const dropDownHandler = event => {\n    event.preventDefault();\n    setNewDepartment({\n      value: event.target.value\n    });\n  }; // const courseList = fakeData.courses;\n  // var cseCourses = [];\n  // for (var i = 0; i < courseList.length; i++) {\n  //   var obj = {};\n  //   obj[\"name\"] = courseList[i].code + \" \" + courseList[i].name;\n  //   obj[\"id\"] = i;\n  //   cseCourses.push(obj);\n  // }\n  // const [course, setCourse, reset] = useInputState(\"\");\n  // const [courses, setCourses] = useState(cseCourses);\n  // const addCourse = (event) => {\n  //   event.preventDefault();\n  //   setCourses([\n  //     ...courses,\n  //     {\n  //       id: courses.length,\n  //       name: course,\n  //     },\n  //   ]);\n  //   reset();\n  // };\n  // const removeCourse = (id) => {\n  //   event.preventDefault();\n  //   setCourses(courses.filter((cours) => cours.id !== id));\n  // };\n\n\n  useEffect(() => {\n    getNewCourses();\n  }, []);\n  useEffect(() => {\n    if (newCourse.lastName !== \"\") {\n      addCourse(newCourse.userid, newCourse.firstName, newCourse.lastName, newCourse.year, newCourse.semester, newCourse.courseNumber, newCourse.displayName, newCourse.department);\n      alert(\"New Course Added\");\n      getNewCourses();\n    }\n  }, [newCourse]);\n  console.log(newCourse);\n  const renderCourse = theCourse.courses.map((cours, idx) => {\n    return (\n      /*#__PURE__*/\n      // <Box display=\"flex\" alignItems=\"center\">\n      //     <div className=\"courses-list\">\n      //         <ListItem className=\"course-list-card\">{cours.name}</ListItem>\n      //         <IconButton ml=\"1em\" icon=\"delete\" onClick={(e)=>{\n      //                 e.preventDefault();\n      //                 if (window.confirm('Are you sure you would like to delete '+cours.name+'?')){\n      //                     removeCourse(cours.id)\n      //                 }\n      //         }}></IconButton>\n      //     </div>\n      // </Box>\n      _jsxDEV(ListItem, {\n        display: \"inline\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Courses, {\n          member: cours.department + \" \" + cours.courseNumber + \"\\n\" + cours.displayName,\n          color: idx % 2 == 0 ? \"gray.300\" : \"gray.100\",\n          year: cours.year,\n          semester: cours.semester,\n          courseNumber: cours.courseNumber,\n          department: cours.department\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)\n    );\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"top\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      id: \"top\",\n      w: \"90%\",\n      m: \"0 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        fontWeight: \"bold\",\n        mt: \"1em\",\n        children: \"Edit Course List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: \"1em\",\n        p: \"3em\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          align: \"center\",\n          fontWeight: \"bold\",\n          mt: \"1em\",\n          mb: \"1em\",\n          fontSize: \"lg\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            mr: \"1em\",\n            alignSelf: \"c\",\n            width: \"80%\",\n            onChange: dropDownHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CSCE\",\n              children: \"Computer Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EENG\",\n              children: \"Engineering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"IT\",\n              children: \"Information Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variantColor: \"green\",\n            variant: \"outline\",\n            display: \"inline\",\n            onClick: getNewCourses,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          mt: \"1em\",\n          mb: \"1em\",\n          fontSize: \"lg\",\n          align: \"center\",\n          children: \"Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            w: \"80%\",\n            children: renderCourse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddCourse, {\n          addNewCourse: addNewCourse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditCourseList;","map":{"version":3,"sources":["/Users/armaandhanoa/Documents/Documents - Armaan’s Mac mini/Projects/ABET-Spring21/FontNew/ABET_Course_Assessment_Tool/components/admin-components/EditCourseList/EditCourseList.js"],"names":["React","useState","useEffect","Box","Text","Select","Button","IconButton","List","Input","ListItem","Flex","VStack","useInputState","fakeData","Courses","getCoursesByDepartment","addCourse","removeCourse","AddCourse","EditCourseList","document","getElementById","scrollIntoView","theCourse","setNewCourses","courses","newCourse","addNewCourse","firstName","userid","lastName","year","semester","courseNumber","displayName","department","theDepartment","setNewDepartment","value","getNewCourses","newCourseList","console","log","handleSubmit","event","preventDefault","window","confirm","alert","dropDownHandler","target","renderCourse","map","cours","idx"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,QARF,EASEC,IATF,EAUEC,MAVF,QAWO,kBAXP;AAYA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SACEC,sBADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,wBAJP;AAKA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3BlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,cAA/B;AACD,GAFQ,CAAT,CAD2B,CAI3B;;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA6BxB,QAAQ,CAAC;AAC1CyB,IAAAA,OAAO,EAAE;AADiC,GAAD,CAA3C;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B3B,QAAQ,CAAC;AACzC4B,IAAAA,SAAS,EAAE,EAD8B;AAEzCC,IAAAA,MAAM,EAAE,EAFiC;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,IAAI,EAAE,CAJmC;AAKzCC,IAAAA,QAAQ,EAAE,EAL+B;AAMzCC,IAAAA,YAAY,EAAE,EAN2B;AAOzCC,IAAAA,WAAW,EAAE,EAP4B;AAQzCC,IAAAA,UAAU,EAAE;AAR6B,GAAD,CAA1C,CAT2B,CAmB3B;;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCrC,QAAQ,CAAC;AACjDsC,IAAAA,KAAK,EAAE;AAD0C,GAAD,CAAlD,CApB2B,CAwB3B;;AACA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,aAAa,GAAG,MAAMzB,sBAAsB,CAACqB,aAAa,CAACE,KAAf,CAAlD;AACAd,IAAAA,aAAa,iCACRD,SADQ;AAEXE,MAAAA,OAAO,EAAEe;AAFE,OAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAS,CAACE,OAAtB;AACD,GAPD;;AASA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QACEC,MAAM,CAACC,OAAP,CAAe,sDAAf,CADF,EAEE;AACA;AACAC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GARD,CAlC2B,CA2C3B;;;AACA,QAAMC,eAAe,GAAIL,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAAC;AACfC,MAAAA,KAAK,EAAEM,KAAK,CAACM,MAAN,CAAaZ;AADL,KAAD,CAAhB;AAGD,GALD,CA5C2B,CAmD3B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEArC,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIAtC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,SAAS,CAACI,QAAV,KAAuB,EAA3B,EAA+B;AAC7Bd,MAAAA,SAAS,CACPU,SAAS,CAACG,MADH,EAEPH,SAAS,CAACE,SAFH,EAGPF,SAAS,CAACI,QAHH,EAIPJ,SAAS,CAACK,IAJH,EAKPL,SAAS,CAACM,QALH,EAMPN,SAAS,CAACO,YANH,EAOPP,SAAS,CAACQ,WAPH,EAQPR,SAAS,CAACS,UARH,CAAT;AAUAa,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACAT,MAAAA,aAAa;AACd;AACF,GAfQ,EAeN,CAACb,SAAD,CAfM,CAAT;AAgBAe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AAEA,QAAMyB,YAAY,GAAG5B,SAAS,CAACE,OAAV,CAAkB2B,GAAlB,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzD;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAC,QAAD;AAAU,QAAA,OAAO,EAAC,QAAlB;AAA2B,QAAA,cAAc,EAAC,QAA1C;AAAmD,QAAA,UAAU,EAAC,QAA9D;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,MAAM,EACJD,KAAK,CAAClB,UAAN,GACA,GADA,GAEAkB,KAAK,CAACpB,YAFN,GAGA,IAHA,GAIAoB,KAAK,CAACnB,WANV;AAQE,UAAA,KAAK,EAAEoB,GAAG,GAAG,CAAN,IAAW,CAAX,GAAe,UAAf,GAA4B,UARrC;AAUE,UAAA,IAAI,EAAED,KAAK,CAACtB,IAVd;AAWE,UAAA,QAAQ,EAAEsB,KAAK,CAACrB,QAXlB;AAYE,UAAA,YAAY,EAAEqB,KAAK,CAACpB,YAZtB;AAaE,UAAA,UAAU,EAAEoB,KAAK,CAAClB;AAbpB,WASOmB,GATP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAZF;AA8BD,GA/BoB,CAArB;AAiCA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,CAAC,EAAC,KAAnB;AAAyB,MAAA,CAAC,EAAC,QAA3B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,KAAf;AAAqB,QAAA,UAAU,EAAC,MAAhC;AAAuC,QAAA,EAAE,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,KAAP;AAAa,QAAA,CAAC,EAAC,KAAf;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,UAAU,EAAC,MAFb;AAGE,UAAA,EAAE,EAAC,KAHL;AAIE,UAAA,EAAE,EAAC,KAJL;AAKE,UAAA,QAAQ,EAAC,IALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,IAAD;AAAM,UAAA,cAAc,EAAC,QAArB;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,KADL;AAEE,YAAA,SAAS,EAAC,GAFZ;AAGE,YAAA,KAAK,EAAC,KAHR;AAIE,YAAA,QAAQ,EAAEL,eAJZ;AAAA,oCAME;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,MAAD;AACE,YAAA,YAAY,EAAC,OADf;AAEE,YAAA,OAAO,EAAC,SAFV;AAGE,YAAA,OAAO,EAAC,QAHV;AAIE,YAAA,OAAO,EAAEV,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eA8BE,QAAC,IAAD;AACE,UAAA,UAAU,EAAC,MADb;AAEE,UAAA,EAAE,EAAC,KAFL;AAGE,UAAA,EAAE,EAAC,KAHL;AAIE,UAAA,QAAQ,EAAC,IAJX;AAKE,UAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eAuCE,QAAC,IAAD;AAAM,UAAA,cAAc,EAAC,QAArB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,CAAC,EAAC,KAAR;AAAA,sBAAeY;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvCF,eAqEE,QAAC,SAAD;AAAW,UAAA,YAAY,EAAExB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBArEF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD,CAzND;;AA0NA,eAAeR,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Text,\n  Select,\n  Button,\n  IconButton,\n  List,\n  Input,\n  ListItem,\n  Flex,\n  VStack,\n} from \"@chakra-ui/react\";\nimport useInputState from \"../../../hooks/useInputState\";\nimport fakeData from \"../../../fake-data/course.json\";\nimport Courses from \"../../Courses\";\nimport {\n  getCoursesByDepartment,\n  addCourse,\n  removeCourse,\n} from \"../../../api/APIHelper\";\nimport AddCourse from \"./AddCourse\";\nconst EditCourseList = () => {\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n  });\n  // State of the courses and function to set the new state.\n  const [theCourse, setNewCourses] = useState({\n    courses: [],\n  });\n\n  const [newCourse, addNewCourse] = useState({\n    firstName: \"\",\n    userid: \"\",\n    lastName: \"\",\n    year: 0,\n    semester: \"\",\n    courseNumber: \"\",\n    displayName: \"\",\n    department: \"\",\n  });\n  // State of the department choices and function to set the new state.\n  const [theDepartment, setNewDepartment] = useState({\n    value: \"CSCE\",\n  });\n\n  // Grabs the courses by department from the back-end.\n  const getNewCourses = async () => {\n    const newCourseList = await getCoursesByDepartment(theDepartment.value);\n    setNewCourses({\n      ...theCourse,\n      courses: newCourseList,\n    });\n    console.log(theCourse.courses);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      window.confirm(\"Are you sure you would like to submit these changes?\")\n    ) {\n      //POST the course list change to the db here\n      alert(\"Course List Updated!\");\n    }\n  };\n  // Sets the department state to the value of the department selected.\n  const dropDownHandler = (event) => {\n    event.preventDefault();\n    setNewDepartment({\n      value: event.target.value,\n    });\n  };\n\n  // const courseList = fakeData.courses;\n  // var cseCourses = [];\n  // for (var i = 0; i < courseList.length; i++) {\n  //   var obj = {};\n\n  //   obj[\"name\"] = courseList[i].code + \" \" + courseList[i].name;\n  //   obj[\"id\"] = i;\n  //   cseCourses.push(obj);\n  // }\n\n  // const [course, setCourse, reset] = useInputState(\"\");\n  // const [courses, setCourses] = useState(cseCourses);\n\n  // const addCourse = (event) => {\n  //   event.preventDefault();\n  //   setCourses([\n  //     ...courses,\n  //     {\n  //       id: courses.length,\n  //       name: course,\n  //     },\n  //   ]);\n  //   reset();\n  // };\n\n  // const removeCourse = (id) => {\n  //   event.preventDefault();\n  //   setCourses(courses.filter((cours) => cours.id !== id));\n  // };\n\n  useEffect(() => {\n    getNewCourses();\n  }, []);\n\n  useEffect(() => {\n    if (newCourse.lastName !== \"\") {\n      addCourse(\n        newCourse.userid,\n        newCourse.firstName,\n        newCourse.lastName,\n        newCourse.year,\n        newCourse.semester,\n        newCourse.courseNumber,\n        newCourse.displayName,\n        newCourse.department\n      );\n      alert(\"New Course Added\");\n      getNewCourses();\n    }\n  }, [newCourse]);\n  console.log(newCourse);\n\n  const renderCourse = theCourse.courses.map((cours, idx) => {\n    return (\n      // <Box display=\"flex\" alignItems=\"center\">\n      //     <div className=\"courses-list\">\n      //         <ListItem className=\"course-list-card\">{cours.name}</ListItem>\n      //         <IconButton ml=\"1em\" icon=\"delete\" onClick={(e)=>{\n      //                 e.preventDefault();\n      //                 if (window.confirm('Are you sure you would like to delete '+cours.name+'?')){\n      //                     removeCourse(cours.id)\n      //                 }\n      //         }}></IconButton>\n      //     </div>\n      // </Box>\n      <ListItem display=\"inline\" justifyContent=\"center\" alignItems=\"center\">\n        <Courses\n          member={\n            cours.department +\n            \" \" +\n            cours.courseNumber +\n            \"\\n\" +\n            cours.displayName\n          }\n          color={idx % 2 == 0 ? \"gray.300\" : \"gray.100\"}\n          key={idx}\n          year={cours.year}\n          semester={cours.semester}\n          courseNumber={cours.courseNumber}\n          department={cours.department}\n        />\n      </ListItem>\n    );\n  });\n\n  return (\n    <div id=\"top\">\n      <VStack id=\"top\" w=\"90%\" m=\"0 auto\">\n        <Text fontSize=\"2xl\" fontWeight=\"bold\" mt=\"1em\">\n          Edit Course List\n        </Text>\n\n        <Box m=\"1em\" p=\"3em\">\n          <Text\n            align=\"center\"\n            fontWeight=\"bold\"\n            mt=\"1em\"\n            mb=\"1em\"\n            fontSize=\"lg\"\n          >\n            Select Department\n          </Text>\n          <Flex justifyContent=\"center\">\n            <Select\n              mr=\"1em\"\n              alignSelf=\"c\"\n              width=\"80%\"\n              onChange={dropDownHandler}\n            >\n              <option value=\"CSCE\">Computer Science</option>\n              <option value=\"EENG\">Engineering</option>\n              <option value=\"IT\">Information Technology</option>\n            </Select>\n            <Button\n              variantColor=\"green\"\n              variant=\"outline\"\n              display=\"inline\"\n              onClick={getNewCourses}\n            >\n              Submit\n            </Button>\n          </Flex>\n          <Text\n            fontWeight=\"bold\"\n            mt=\"1em\"\n            mb=\"1em\"\n            fontSize=\"lg\"\n            align=\"center\"\n          >\n            Courses\n          </Text>\n          <Flex justifyContent=\"center\">\n            <List w=\"80%\">{renderCourse}</List>\n          </Flex>\n          {/* <div className=\"course-list-input\">\n          <form>\n            <Input\n              mt=\"1rem\"\n              placeholder=\"enter a new course (i.e. CSCE 3530 Computer Networks)\"\n              variant=\"flushed\"\n              type=\"text\"\n              // value={course}\n              // onChange={setCourse}\n              w=\"30em\"\n            />\n          </form>\n          <IconButton\n            variant=\"link\"\n            isActive=\"false\"\n            mt=\"1.5em\"\n            ml=\"1em\"\n            variantColor=\"green\"\n            size=\"sm\"\n            icon=\"add\"\n            // onClick={addCourse}\n          ></IconButton>\n        </div> */}\n          {/* <Button variantColor=\"green\" variant=\"outline\" onClick={handleSubmit}>\n          Submit\n        </Button> */}\n\n          <AddCourse addNewCourse={addNewCourse}></AddCourse>\n        </Box>\n      </VStack>\n    </div>\n  );\n};\nexport default EditCourseList;\n"]},"metadata":{},"sourceType":"module"}