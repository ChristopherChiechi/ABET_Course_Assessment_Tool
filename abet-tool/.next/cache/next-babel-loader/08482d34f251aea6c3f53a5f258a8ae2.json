{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\admin-components\\\\OutcomeMapping\\\\CourseOutcomeList.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, setState } from \"react\";\nimport { Box, Select, Button, Text, CheckboxGroup, Checkbox, SimpleGrid } from \"@chakra-ui/core\";\nimport { HStack } from \"@chakra-ui/react\";\nimport { render } from \"react-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport \"./OutcomeMapping.css\";\n\nconst CourseOutcomeList = ({\n  course,\n  numOfCheckmarks,\n  department\n}) => {\n  console.log(course);\n  console.log(numOfCheckmarks);\n  console.log(department);\n  const course_Outcomes = course.courseOutcomes;\n  console.log(course_Outcomes);\n  let count = 0;\n  const renderCourseOutcomes = course_Outcomes.map(outcomes => {\n    return __jsx(React.Fragment, null, __jsx(SimpleGrid, {\n      columns: 2,\n      spacing: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(Box, {\n      bg: \"white\",\n      height: \"80px\",\n      lineHeight: \"80px\",\n      textAlign: \"left\",\n      borderTopWidth: \"0px\",\n      borderLeftWidth: \"0px\",\n      borderRightWidth: \"0px\",\n      borderBottomWidth: \"2px\",\n      overflowWrap: \"break-word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      fontSize: \"14px\",\n      textAlign: \"left\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      display: \"inline-block\",\n      marginLeft: \"3em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, outcomes.order, \". \", outcomes.outcome)), __jsx(Box, {\n      bg: \"transparent\",\n      height: \"80px\",\n      lineHeight: \"80px\",\n      borderTopWidth: \"0px\",\n      borderLeftWidth: \"0px\",\n      borderRightWidth: \"0px\",\n      borderBottomWidth: \"2px\",\n      overflowWrap: \"break-word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, numOfCheckmarks == \"6\" && __jsx(HStack, {\n      spacing: 5,\n      direction: \"row\",\n      alignContent: \"center\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      display: \"inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, __jsx(Checkbox, _extends({\n      colorScheme: \"green\",\n      value: department\n    }, course, outcomes.order, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), \"1\"), __jsx(Checkbox, {\n      colorScheme: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"2\"), __jsx(Checkbox, {\n      colorScheme: \"green\",\n      value: \"Option 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"3\"), __jsx(Checkbox, {\n      colorScheme: \"green\",\n      value: \"Option 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"4\"), __jsx(Checkbox, {\n      colorScheme: \"green\",\n      value: \"Option 5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"5\"), __jsx(Checkbox, {\n      colorScheme: \"green\",\n      value: \"Option 6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"6\")), numOfCheckmarks == \"7\" && __jsx(HStack, {\n      spacing: 5,\n      direction: \"row\",\n      alignContent: \"center\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      display: \"inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, __jsx(Checkbox, {\n      colorScheme: \"red\",\n      value: \"Option 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"1\"), __jsx(Checkbox, {\n      value: \"Option 2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"2\"), __jsx(Checkbox, {\n      value: \"Option 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"3\"), __jsx(Checkbox, {\n      value: \"Option 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"4\"), __jsx(Checkbox, {\n      value: \"Option 5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"5\"), __jsx(Checkbox, {\n      value: \"Option 6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"6\"), __jsx(Checkbox, {\n      value: \"Option 7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"7\")))));\n  });\n  return __jsx(React.Fragment, null, renderCourseOutcomes);\n};\n\nexport default CourseOutcomeList;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/admin-components/OutcomeMapping/CourseOutcomeList.js"],"names":["React","useState","useEffect","setState","Box","Select","Button","Text","CheckboxGroup","Checkbox","SimpleGrid","HStack","render","useSetRecoilState","CourseOutcomeList","course","numOfCheckmarks","department","console","log","course_Outcomes","courseOutcomes","count","renderCourseOutcomes","map","outcomes","order","outcome"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from \"react\";\r\nimport {\r\n  Box,\r\n  Select,\r\n  Button,\r\n  Text,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n  SimpleGrid,\r\n} from \"@chakra-ui/core\";\r\nimport { HStack } from \"@chakra-ui/react\";\r\nimport { render } from \"react-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport \"./OutcomeMapping.css\";\r\n\r\nconst CourseOutcomeList = ({ course, numOfCheckmarks, department }) => {\r\n  console.log(course);\r\n  console.log(numOfCheckmarks);\r\n  console.log(department);\r\n  const course_Outcomes = course.courseOutcomes;\r\n  console.log(course_Outcomes);\r\n  let count = 0;\r\n\r\n  const renderCourseOutcomes = course_Outcomes.map((outcomes) => {\r\n    return (\r\n      <>\r\n        <SimpleGrid columns={2} spacing={5}>\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            lineHeight=\"80px\"\r\n            textAlign=\"left\"\r\n            borderTopWidth=\"0px\"\r\n            borderLeftWidth=\"0px\"\r\n            borderRightWidth=\"0px\"\r\n            borderBottomWidth=\"2px\"\r\n            overflowWrap=\"break-word\"\r\n          >\r\n            <Text\r\n              fontSize=\"14px\"\r\n              textAlign=\"left\"\r\n              verticalAlign=\"middle\"\r\n              lineHeight=\"normal\"\r\n              display=\"inline-block\"\r\n              marginLeft=\"3em\"\r\n            >\r\n              {outcomes.order}. {outcomes.outcome}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            bg=\"transparent\"\r\n            height=\"80px\"\r\n            lineHeight=\"80px\"\r\n            borderTopWidth=\"0px\"\r\n            borderLeftWidth=\"0px\"\r\n            borderRightWidth=\"0px\"\r\n            borderBottomWidth=\"2px\"\r\n            overflowWrap=\"break-word\"\r\n          >\r\n            {numOfCheckmarks == \"6\" && (\r\n              <HStack\r\n                spacing={5}\r\n                direction=\"row\"\r\n                alignContent=\"center\"\r\n                verticalAlign=\"middle\"\r\n                lineHeight=\"normal\"\r\n                display=\"inline-block\"\r\n              >\r\n                <Checkbox\r\n                  colorScheme=\"green\"\r\n                  value={department}\r\n                  {...course}\r\n                  {...outcomes.order}\r\n                >\r\n                  1\r\n                </Checkbox>\r\n                <Checkbox colorScheme=\"green\">2</Checkbox>\r\n                <Checkbox colorScheme=\"green\" value=\"Option 3\">\r\n                  3\r\n                </Checkbox>\r\n                <Checkbox colorScheme=\"green\" value=\"Option 4\">\r\n                  4\r\n                </Checkbox>\r\n                <Checkbox colorScheme=\"green\" value=\"Option 5\">\r\n                  5\r\n                </Checkbox>\r\n                <Checkbox colorScheme=\"green\" value=\"Option 6\">\r\n                  6\r\n                </Checkbox>\r\n              </HStack>\r\n            )}\r\n            {numOfCheckmarks == \"7\" && (\r\n              <HStack\r\n                spacing={5}\r\n                direction=\"row\"\r\n                alignContent=\"center\"\r\n                verticalAlign=\"middle\"\r\n                lineHeight=\"normal\"\r\n                display=\"inline-block\"\r\n              >\r\n                <Checkbox colorScheme=\"red\" value=\"Option 1\">\r\n                  1\r\n                </Checkbox>\r\n                <Checkbox value=\"Option 2\">2</Checkbox>\r\n                <Checkbox value=\"Option 3\">3</Checkbox>\r\n                <Checkbox value=\"Option 4\">4</Checkbox>\r\n                <Checkbox value=\"Option 5\">5</Checkbox>\r\n                <Checkbox value=\"Option 6\">6</Checkbox>\r\n                <Checkbox value=\"Option 7\">7</Checkbox>\r\n              </HStack>\r\n            )}\r\n          </Box>\r\n        </SimpleGrid>\r\n      </>\r\n    );\r\n  });\r\n  return <>{renderCourseOutcomes}</>;\r\n};\r\nexport default CourseOutcomeList;\r\n"]},"metadata":{},"sourceType":"module"}