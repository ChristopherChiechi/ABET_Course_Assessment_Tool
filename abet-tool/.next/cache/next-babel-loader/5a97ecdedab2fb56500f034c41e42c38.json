{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\admin-components\\\\GenerateStudentSurveys\\\\GenerateStudentSurveys.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Text, Select, Button, IconButton, List, Input, ListItem, Flex, RadioGroup, Stack, Radio } from \"@chakra-ui/core\";\nimport { getCoursesByDepartment } from \"../../../api/APIHelper\";\nimport { listParser } from \"@chakra-ui/styled-system\";\n\nconst GenerateStudentSurveys = () => {\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n  });\n\n  const dropDownHandler = event => {\n    event.preventDefault(); //value: event.target.value,\n  };\n\n  const {\n    0: courseList,\n    1: setCourses\n  } = useState({\n    courses: []\n  });\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"1\");\n\n  const getNewCourses = async () => {\n    const newCourseList = await getCoursesByDepartment(\"CSCE\");\n    setCourses(_objectSpread(_objectSpread({}, courseList), {}, {\n      courses: newCourseList\n    }));\n    console.log(courseList.courses);\n  };\n\n  const surveyCourses = [].concat(courseList.courses).sort((a, b) => a.courseNumber > b.courseNumber ? 1 : -1).map((course, idx) => {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, course.department, \" \", course.courseNumber, \".\", course.sectionNumber, \" \", course.displayName, \" \"), __jsx(\"a\", {\n      href: \"https://www.unt.edu/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Student Survey Link\"));\n  });\n  useEffect(() => {\n    getNewCourses();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    borderWidth: \"2px\",\n    rounded: \"lg\",\n    alignItems: \"center\",\n    m: \"1em\",\n    p: \"3em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    fontSize: \"lg\",\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Generate Student Surveys\"), __jsx(RadioGroup, {\n    defaultValue: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    spacing: 5,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(Radio, {\n    colorScheme: \"geen\",\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Courses\"), __jsx(Radio, {\n    colorScheme: \"green\",\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Instructor\"))), surveyCourses))));\n};\n\nexport default GenerateStudentSurveys;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/admin-components/GenerateStudentSurveys/GenerateStudentSurveys.js"],"names":["React","useState","useEffect","Box","Text","Select","Button","IconButton","List","Input","ListItem","Flex","RadioGroup","Stack","Radio","getCoursesByDepartment","listParser","GenerateStudentSurveys","document","getElementById","scrollIntoView","dropDownHandler","event","preventDefault","courseList","setCourses","courses","value","setValue","getNewCourses","newCourseList","console","log","surveyCourses","concat","sort","a","b","courseNumber","map","course","idx","department","sectionNumber","displayName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Select,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  Input,\r\n  ListItem,\r\n  Flex,\r\n  RadioGroup,\r\n  Stack,\r\n  Radio,\r\n} from \"@chakra-ui/core\";\r\nimport { getCoursesByDepartment } from \"../../../api/APIHelper\";\r\nimport { listParser } from \"@chakra-ui/styled-system\";\r\nconst GenerateStudentSurveys = () => {\r\n  useEffect(() => {\r\n    document.getElementById(\"top\").scrollIntoView();\r\n  });\r\n\r\n  const dropDownHandler = (event) => {\r\n    event.preventDefault();\r\n    //value: event.target.value,\r\n  };\r\n\r\n  const [courseList, setCourses] = useState({ courses: [] });\r\n  const [value, setValue] = useState(\"1\");\r\n  const getNewCourses = async () => {\r\n    const newCourseList = await getCoursesByDepartment(\"CSCE\");\r\n    setCourses({\r\n      ...courseList,\r\n      courses: newCourseList,\r\n    });\r\n    console.log(courseList.courses);\r\n  };\r\n  const surveyCourses = []\r\n    .concat(courseList.courses)\r\n    .sort((a, b) => (a.courseNumber > b.courseNumber ? 1 : -1))\r\n    .map((course, idx) => {\r\n      return (\r\n        <>\r\n        <ListItem>\r\n          {course.department} {course.courseNumber}.{course.sectionNumber}{\" \"}\r\n          {course.displayName}{\" \"}\r\n        </ListItem>\r\n        <a href=\"https://www.unt.edu/\">Student Survey Link</a>\r\n        </>\r\n      );\r\n    });\r\n  useEffect(() => {\r\n    getNewCourses();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"top\">\r\n      <Box borderWidth=\"2px\" rounded=\"lg\" alignItems=\"center\" m=\"1em\" p=\"3em\">\r\n        <div>\r\n          <Box>\r\n            <Text fontWeight=\"bold\" fontSize=\"lg\" mb=\"1em\">\r\n              Generate Student Surveys\r\n            </Text>\r\n            {/*<Flex mb=\"2em\">\r\n             <RadioGroup onC defaultValue=\"SBC\">\r\n            <Stack direction=\"row\">\r\n              <Radio value=\"SBI\" colorScheme=\"green\">Instructor</Radio>\r\n              <Radio value=\"SBC\"colorScheme=\"green\">Courses</Radio>\r\n            </Stack>\r\n           </RadioGroup> \r\n  \r\n          // </Flex> */}\r\n            <RadioGroup defaultValue=\"2\">\r\n              <Stack spacing={5} direction=\"row\">\r\n                <Radio colorScheme=\"geen\" value=\"1\">\r\n                  Courses\r\n                </Radio>\r\n                <Radio colorScheme=\"green\" value=\"2\">\r\n                  Instructor\r\n                </Radio>\r\n              </Stack>\r\n            </RadioGroup>\r\n            {surveyCourses}\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\nexport default GenerateStudentSurveys;\r\n"]},"metadata":{},"sourceType":"module"}