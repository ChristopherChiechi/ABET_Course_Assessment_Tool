{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\LoginBox.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, FormControl, FormLabel, Input, Button, Text } from '@chakra-ui/core';\nimport '././LoginBox.css';\nimport useInputState from '../hooks/useInputState';\nimport { fakeLogin } from '../utils/fakeLogin';\nimport Link from 'next/link';\nimport API from '../api/api';\nimport { login } from '../api/APIHelper';\n\nvar test = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return API.testConnection().then(function (result) {\n              return console.log(result);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function test() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar LoginBox = function LoginBox() {\n  _s();\n\n  var api_helper = new API(); // //---getFormsBySection(userid, year, semester, department, course, section)---\n  // let test_response = api_helper.getFormsBySection(\"MT2020\", 2020, \"Fall\", \"CSCE\", 1030, 1);\n  // //console.log(test_response); // Promise { <pending> }\n  // test_response.then(function (result) {\n  //     console.log(result) // \"List of forms\"\n  //     let result_form = result[0];    // first form from list of forms\n  //     let test_response2 = api_helper.postComment(\"MT2020\", 2020, \"Fall\", result_form);\n  //     test_response2.then(function (result2) {\n  //         console.log(result2);\n  //     });\n  // });\n\n  var test = function test() {\n    new API().login(\"twr0045\", \"dfgdfgdfgdf\").then(function (res) {\n      return console.log(\"login: \" + res);\n    });\n    new API().addCourse(\"MT2020\", \"Mark\", \"Thompson\", 2020, \"Spring\", \"3530\", \"Networks\").then(function (res) {\n      return console.log(\"addCourse: \" + res);\n    });\n  };\n\n  var _useInputState = useInputState(\"\"),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      username = _useInputState2[0],\n      setUsername = _useInputState2[1],\n      resetUsername = _useInputState2[2];\n\n  var _useInputState3 = useInputState(\"\"),\n      _useInputState4 = _slicedToArray(_useInputState3, 3),\n      password = _useInputState4[0],\n      setPassword = _useInputState4[1],\n      resetPassword = _useInputState4[2];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(evt) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              evt.preventDefault();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return login(username, password);\n\n            case 4:\n              response = _context2.sent;\n\n              if (response) {\n                alert(\"success\");\n                console.log(response);\n              } else alert(\"fail\");\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              alert(\"try 'test' & 'pass'\");\n\n            case 11:\n              _context2.prev = 11;\n              resetUsername();\n              resetPassword();\n              return _context2.finish(11);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8, 11, 15]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Box, {\n    className: \"Login-Box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontSize: \"xl\",\n    className: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Login\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"username\",\n    margin: \"1rem\",\n    mt: \"3rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Username\"), __jsx(Input, {\n    placeholder: \"EUID\",\n    id: \"input\",\n    value: username,\n    onChange: setUsername,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), __jsx(FormControl, {\n    isRequired: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"password\",\n    margin: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Password\"), __jsx(Input, {\n    placeholder: \"Password\",\n    id: \"input\",\n    type: \"password\",\n    value: password,\n    onChange: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    variantColor: \"green\",\n    margin: \"1rem\",\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), __jsx(Link, {\n    href: \"/instructorHome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Instructor Home\")), __jsx(Link, {\n    href: \"/adminHome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    margin: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Admin Home\"))), __jsx(\"button\", {\n    onClick: test,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"TEST\"));\n};\n\n_s(LoginBox, \"7g1lrQKKlgvK6CxTVyPlHs5wQRI=\", false, function () {\n  return [useInputState, useInputState];\n});\n\n_c = LoginBox;\nexport default LoginBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginBox\");","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/LoginBox.js"],"names":["React","useState","Box","FormControl","FormLabel","Input","Button","Text","useInputState","fakeLogin","Link","API","login","test","testConnection","then","result","console","log","LoginBox","api_helper","res","addCourse","username","setUsername","resetUsername","password","setPassword","resetPassword","handleSubmit","evt","preventDefault","response","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Box, FormControl, FormLabel, Input, Button, Text} from '@chakra-ui/core';\r\nimport '././LoginBox.css';\r\nimport useInputState from '../hooks/useInputState';\r\nimport { fakeLogin } from '../utils/fakeLogin';\r\nimport Link from 'next/link';\r\nimport API from '../api/api';\r\nimport {login} from '../api/APIHelper';\r\n\r\nconst test = async () =>{\r\n    await API.testConnection().then(result => console.log(result));\r\n}\r\nconst LoginBox = () => {\r\n    let api_helper = new API();\r\n\r\n    // //---getFormsBySection(userid, year, semester, department, course, section)---\r\n    // let test_response = api_helper.getFormsBySection(\"MT2020\", 2020, \"Fall\", \"CSCE\", 1030, 1);\r\n\r\n    // //console.log(test_response); // Promise { <pending> }\r\n\r\n    // test_response.then(function (result) {\r\n    //     console.log(result) // \"List of forms\"\r\n\r\n    //     let result_form = result[0];    // first form from list of forms\r\n\r\n    //     let test_response2 = api_helper.postComment(\"MT2020\", 2020, \"Fall\", result_form);\r\n\r\n    //     test_response2.then(function (result2) {\r\n    //         console.log(result2);\r\n    //     });\r\n    // });\r\n    const test = () => {\r\n        new API().login(\"twr0045\", \"dfgdfgdfgdf\").then(res => console.log(\"login: \" + res));\r\n        new API().addCourse(\"MT2020\", \"Mark\", \"Thompson\", 2020, \"Spring\", \"3530\", \"Networks\").then(res => console.log(\"addCourse: \" + res));\r\n    }\r\n    const [username, setUsername, resetUsername] = useInputState(\"\");\r\n    const [password, setPassword, resetPassword] = useInputState(\"\");\r\n    \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        \r\n        try {\r\n            //await fakeLogin(username, password);\r\n            const response = await login(username, password);\r\n\r\n            if (response) {\r\n                alert(\"success\");\r\n                console.log(response);\r\n            }\r\n            else \r\n                alert(\"fail\");\r\n        } catch (error) {\r\n            alert(\"try 'test' & 'pass'\");\r\n        }\r\n        finally{\r\n            resetUsername();\r\n            resetPassword();\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Box className = \"Login-Box\">\r\n        <Text fontSize=\"xl\" className=\"Login\">Login</Text>\r\n            <form onSubmit={handleSubmit}>    \r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"username\" margin = \"1rem\" mt=\"3rem\">Username</FormLabel>\r\n                    <Input placeholder=\"EUID\" id=\"input\" value={username} onChange={setUsername}/>\r\n                </FormControl>\r\n\r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"password\" margin = \"1rem\">Password</FormLabel>\r\n                    <Input placeholder=\"Password\" id=\"input\" type=\"password\" value={password} onChange={setPassword}/>\r\n                </FormControl>\r\n\r\n                <Button variantColor=\"green\" margin = \"1rem\" onClick = {handleSubmit} type=\"submit\">Sign In</Button>\r\n                <Link href=\"/instructorHome\">\r\n                    <Button variantColor=\"blue\" >Instructor Home</Button>\r\n                </Link>\r\n\r\n                <Link href=\"/adminHome\">\r\n                    <Button variantColor=\"blue\" margin = \"1rem\">Admin Home</Button>\r\n                </Link>\r\n            </form>\r\n            <button onClick={test}>TEST</button>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default LoginBox;"]},"metadata":{},"sourceType":"module"}