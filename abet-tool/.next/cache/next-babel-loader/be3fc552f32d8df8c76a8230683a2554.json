{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\admin-components\\\\EditCourseList\\\\EditCourseList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Text, Select, Button, IconButton, List, Input, ListItem, Flex } from \"@chakra-ui/core\";\nimport useInputState from \"../../../hooks/useInputState\";\nimport \"./EditCourseList.css\";\nimport fakeData from \"../../../fake-data/course.json\";\nimport FacultyMember from \"../FacultyMember\";\nimport Courses from \"../Courses\";\nimport { getCoursesByDepartment, addCourse, removeCourse } from \"../../../api/APIHelper\";\nimport AddCourse from \"./AddCourse\";\n\nconst EditCourseList = () => {\n  useEffect(() => {\n    document.getElementById(\"top\").scrollIntoView();\n  }); // State of the courses and function to set the new state.\n\n  const {\n    0: theCourse,\n    1: setNewCourses\n  } = useState({\n    courses: []\n  });\n  const {\n    0: newCourse,\n    1: addNewCourse\n  } = useState({\n    firstName: \"\",\n    userid: \"\",\n    lastName: \"\",\n    year: 0,\n    semester: \"\",\n    courseNumber: \"\",\n    displayName: \"\",\n    department: \"\"\n  }); // State of the department choices and function to set the new state.\n\n  const {\n    0: theDepartment,\n    1: setNewDepartment\n  } = useState({\n    value: \"CSCE\"\n  }); // Grabs the courses by department from the back-end.\n\n  const getNewCourses = async () => {\n    const newCourseList = await getCoursesByDepartment(theDepartment.value);\n    setNewCourses(_objectSpread(_objectSpread({}, theCourse), {}, {\n      courses: newCourseList\n    }));\n    console.log(theCourse.courses);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (window.confirm(\"Are you sure you would like to submit these changes?\")) {\n      //POST the course list change to the db here\n      alert(\"Course List Updated!\");\n    }\n  }; // Sets the department state to the value of the department selected.\n\n\n  const dropDownHandler = event => {\n    event.preventDefault();\n    setNewDepartment({\n      value: event.target.value\n    });\n  }; // const courseList = fakeData.courses;\n  // var cseCourses = [];\n  // for (var i = 0; i < courseList.length; i++) {\n  //   var obj = {};\n  //   obj[\"name\"] = courseList[i].code + \" \" + courseList[i].name;\n  //   obj[\"id\"] = i;\n  //   cseCourses.push(obj);\n  // }\n  // const [course, setCourse, reset] = useInputState(\"\");\n  // const [courses, setCourses] = useState(cseCourses);\n  // const addCourse = (event) => {\n  //   event.preventDefault();\n  //   setCourses([\n  //     ...courses,\n  //     {\n  //       id: courses.length,\n  //       name: course,\n  //     },\n  //   ]);\n  //   reset();\n  // };\n  // const removeCourse = (id) => {\n  //   event.preventDefault();\n  //   setCourses(courses.filter((cours) => cours.id !== id));\n  // };\n\n\n  useEffect(() => {\n    getNewCourses();\n  }, []);\n  useEffect(() => {\n    if (newCourse.lastName !== \"\") {\n      addCourse(newCourse.userid, newCourse.firstName, newCourse.lastName, newCourse.year, newCourse.semester, newCourse.courseNumber, newCourse.displayName, newCourse.department);\n      alert(\"New Course Added\");\n      getNewCourses();\n    }\n  }, [newCourse]);\n  console.log(newCourse);\n  const renderCourse = theCourse.courses.map((cours, idx) => {\n    return (// <Box display=\"flex\" alignItems=\"center\">\n      //     <div className=\"courses-list\">\n      //         <ListItem className=\"course-list-card\">{cours.name}</ListItem>\n      //         <IconButton ml=\"1em\" icon=\"delete\" onClick={(e)=>{\n      //                 e.preventDefault();\n      //                 if (window.confirm('Are you sure you would like to delete '+cours.name+'?')){\n      //                     removeCourse(cours.id)\n      //                 }\n      //         }}></IconButton>\n      //     </div>\n      // </Box>\n      __jsx(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, __jsx(Courses, {\n        member: cours.department + \" \" + cours.courseNumber + \"\\n\" + cours.displayName,\n        color: idx % 2 == 0 ? \"gray.300\" : \"gray.100\",\n        key: idx,\n        year: cours.year,\n        semester: cours.semester,\n        courseNumber: cours.courseNumber,\n        department: cours.department,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }))\n    );\n  });\n  return __jsx(\"div\", {\n    id: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"Edit Course List\"), __jsx(Box, {\n    alignItems: \"center\",\n    m: \"1em\",\n    p: \"3em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"course-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    mt: \"1em\",\n    mb: \"1em\",\n    fontSize: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Select Department\"), __jsx(Flex, {\n    mb: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    mr: \"1em\",\n    width: \"80%\",\n    onChange: dropDownHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"CSCE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Computer Science\"), __jsx(\"option\", {\n    value: \"EENG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Engineering\"), __jsx(\"option\", {\n    value: \"IT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Information Technology\")), __jsx(Button, {\n    variantColor: \"green\",\n    variant: \"outline\",\n    onClick: getNewCourses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Submit\")), __jsx(Text, {\n    fontWeight: \"bold\",\n    mt: \"1em\",\n    mb: \"1em\",\n    fontSize: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Courses\"), __jsx(List, {\n    w: \"70%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, renderCourse)), __jsx(AddCourse, {\n    addNewCourse: addNewCourse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EditCourseList;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/admin-components/EditCourseList/EditCourseList.js"],"names":["React","useState","useEffect","Box","Text","Select","Button","IconButton","List","Input","ListItem","Flex","useInputState","fakeData","FacultyMember","Courses","getCoursesByDepartment","addCourse","removeCourse","AddCourse","EditCourseList","document","getElementById","scrollIntoView","theCourse","setNewCourses","courses","newCourse","addNewCourse","firstName","userid","lastName","year","semester","courseNumber","displayName","department","theDepartment","setNewDepartment","value","getNewCourses","newCourseList","console","log","handleSubmit","event","preventDefault","window","confirm","alert","dropDownHandler","target","renderCourse","map","cours","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Select,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  Input,\r\n  ListItem,\r\n  Flex,\r\n} from \"@chakra-ui/core\";\r\nimport useInputState from \"../../../hooks/useInputState\";\r\nimport \"./EditCourseList.css\";\r\nimport fakeData from \"../../../fake-data/course.json\";\r\nimport FacultyMember from \"../FacultyMember\";\r\nimport Courses from \"../Courses\";\r\nimport {\r\n  getCoursesByDepartment,\r\n  addCourse,\r\n  removeCourse,\r\n} from \"../../../api/APIHelper\";\r\nimport AddCourse from \"./AddCourse\";\r\nconst EditCourseList = () => {\r\n  useEffect(() => {\r\n    document.getElementById(\"top\").scrollIntoView();\r\n  });\r\n  // State of the courses and function to set the new state.\r\n  const [theCourse, setNewCourses] = useState({\r\n    courses: [],\r\n  });\r\n\r\n  const [newCourse, addNewCourse] = useState({\r\n    firstName: \"\",\r\n    userid: \"\",\r\n    lastName: \"\",\r\n    year: 0,\r\n    semester: \"\",\r\n    courseNumber: \"\",\r\n    displayName: \"\",\r\n    department: \"\",\r\n  });\r\n  // State of the department choices and function to set the new state.\r\n  const [theDepartment, setNewDepartment] = useState({\r\n    value: \"CSCE\",\r\n  });\r\n\r\n  // Grabs the courses by department from the back-end.\r\n  const getNewCourses = async () => {\r\n    const newCourseList = await getCoursesByDepartment(theDepartment.value);\r\n    setNewCourses({\r\n      ...theCourse,\r\n      courses: newCourseList,\r\n    });\r\n    console.log(theCourse.courses);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      window.confirm(\"Are you sure you would like to submit these changes?\")\r\n    ) {\r\n      //POST the course list change to the db here\r\n      alert(\"Course List Updated!\");\r\n    }\r\n  };\r\n  // Sets the department state to the value of the department selected.\r\n  const dropDownHandler = (event) => {\r\n    event.preventDefault();\r\n    setNewDepartment({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  // const courseList = fakeData.courses;\r\n  // var cseCourses = [];\r\n  // for (var i = 0; i < courseList.length; i++) {\r\n  //   var obj = {};\r\n\r\n  //   obj[\"name\"] = courseList[i].code + \" \" + courseList[i].name;\r\n  //   obj[\"id\"] = i;\r\n  //   cseCourses.push(obj);\r\n  // }\r\n\r\n  // const [course, setCourse, reset] = useInputState(\"\");\r\n  // const [courses, setCourses] = useState(cseCourses);\r\n\r\n  // const addCourse = (event) => {\r\n  //   event.preventDefault();\r\n  //   setCourses([\r\n  //     ...courses,\r\n  //     {\r\n  //       id: courses.length,\r\n  //       name: course,\r\n  //     },\r\n  //   ]);\r\n  //   reset();\r\n  // };\r\n\r\n  // const removeCourse = (id) => {\r\n  //   event.preventDefault();\r\n  //   setCourses(courses.filter((cours) => cours.id !== id));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getNewCourses();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newCourse.lastName !== \"\") {\r\n      addCourse(\r\n        newCourse.userid,\r\n        newCourse.firstName,\r\n        newCourse.lastName,\r\n        newCourse.year,\r\n        newCourse.semester,\r\n        newCourse.courseNumber,\r\n        newCourse.displayName,\r\n        newCourse.department\r\n      );\r\n      alert(\"New Course Added\");\r\n      getNewCourses();\r\n    }\r\n  }, [newCourse]);\r\n  console.log(newCourse);\r\n\r\n  const renderCourse = theCourse.courses.map((cours, idx) => {\r\n    return (\r\n      // <Box display=\"flex\" alignItems=\"center\">\r\n      //     <div className=\"courses-list\">\r\n      //         <ListItem className=\"course-list-card\">{cours.name}</ListItem>\r\n      //         <IconButton ml=\"1em\" icon=\"delete\" onClick={(e)=>{\r\n      //                 e.preventDefault();\r\n      //                 if (window.confirm('Are you sure you would like to delete '+cours.name+'?')){\r\n      //                     removeCourse(cours.id)\r\n      //                 }\r\n      //         }}></IconButton>\r\n      //     </div>\r\n      // </Box>\r\n      <ListItem>\r\n        <Courses\r\n          member={\r\n            cours.department +\r\n            \" \" +\r\n            cours.courseNumber +\r\n            \"\\n\" +\r\n            cours.displayName\r\n          }\r\n          color={idx % 2 == 0 ? \"gray.300\" : \"gray.100\"}\r\n          key={idx}\r\n          year={cours.year}\r\n          semester={cours.semester}\r\n          courseNumber={cours.courseNumber}\r\n          department={cours.department}\r\n        />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div id=\"top\">\r\n      <Text fontWeight=\"bold\">Edit Course List</Text>\r\n      <Box alignItems=\"center\" m=\"1em\" p=\"3em\">\r\n        <div className=\"course-list-container\">\r\n          <Text fontWeight=\"bold\" mt=\"1em\" mb=\"1em\" fontSize=\"lg\">\r\n            Select Department\r\n          </Text>\r\n          <Flex mb=\"2em\">\r\n            <Select mr=\"1em\" width=\"80%\" onChange={dropDownHandler}>\r\n              <option value=\"CSCE\">Computer Science</option>\r\n              <option value=\"EENG\">Engineering</option>\r\n              <option value=\"IT\">Information Technology</option>\r\n            </Select>\r\n            <Button\r\n              variantColor=\"green\"\r\n              variant=\"outline\"\r\n              onClick={getNewCourses}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Flex>\r\n          <Text fontWeight=\"bold\" mt=\"1em\" mb=\"1em\" fontSize=\"lg\">\r\n            Courses\r\n          </Text>\r\n          <List w=\"70%\">{renderCourse}</List>\r\n        </div>\r\n        {/* <div className=\"course-list-input\">\r\n          <form>\r\n            <Input\r\n              mt=\"1rem\"\r\n              placeholder=\"enter a new course (i.e. CSCE 3530 Computer Networks)\"\r\n              variant=\"flushed\"\r\n              type=\"text\"\r\n              // value={course}\r\n              // onChange={setCourse}\r\n              w=\"30em\"\r\n            />\r\n          </form>\r\n          <IconButton\r\n            variant=\"link\"\r\n            isActive=\"false\"\r\n            mt=\"1.5em\"\r\n            ml=\"1em\"\r\n            variantColor=\"green\"\r\n            size=\"sm\"\r\n            icon=\"add\"\r\n            // onClick={addCourse}\r\n          ></IconButton>\r\n        </div> */}\r\n        {/* <Button variantColor=\"green\" variant=\"outline\" onClick={handleSubmit}>\r\n          Submit\r\n        </Button> */}\r\n        <AddCourse addNewCourse={addNewCourse}></AddCourse>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\nexport default EditCourseList;\r\n"]},"metadata":{},"sourceType":"module"}