{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\LoginBox.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, FormControl, FormLabel, Input, Button, Text } from '@chakra-ui/core';\nimport '././LoginBox.css';\nimport useInputState from '../hooks/useInputState';\nimport { fakeLogin } from '../utils/fakeLogin';\nimport Link from 'next/link';\nimport API from '../api/api';\nimport { login } from '../api/APIHelper';\n\nconst test = async () => {\n  await API.testConnection().then(result => console.log(result));\n};\n\nconst LoginBox = () => {\n  let api_helper = new API(); // //---getFormsBySection(userid, year, semester, department, course, section)---\n  // let test_response = api_helper.getFormsBySection(\"MT2020\", 2020, \"Fall\", \"CSCE\", 1030, 1);\n  // //console.log(test_response); // Promise { <pending> }\n  // test_response.then(function (result) {\n  //     console.log(result) // \"List of forms\"\n  //     let result_form = result[0];    // first form from list of forms\n  //     let test_response2 = api_helper.postComment(\"MT2020\", 2020, \"Fall\", result_form);\n  //     test_response2.then(function (result2) {\n  //         console.log(result2);\n  //     });\n  // });\n\n  const test = () => {\n    new API().addCourse(\"MT2020\", \"Mark\", \"Thompson\", 2020, \"Spring\", \"3530\", \"Networks\").then(res => console.log(res));\n  };\n\n  const [username, setUsername, resetUsername] = useInputState(\"\");\n  const [password, setPassword, resetPassword] = useInputState(\"\");\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      //await fakeLogin(username, password);\n      const response = await login(username, password);\n\n      if (response) {\n        alert(\"success\");\n        console.log(response);\n      } else alert(\"fail\");\n    } catch (error) {\n      alert(\"try 'test' & 'pass'\");\n    } finally {\n      resetUsername();\n      resetPassword();\n    }\n  };\n\n  return __jsx(Box, {\n    className: \"Login-Box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontSize: \"xl\",\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Login\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"username\",\n    margin: \"1rem\",\n    mt: \"3rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Username\"), __jsx(Input, {\n    placeholder: \"EUID\",\n    id: \"input\",\n    value: username,\n    onChange: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"password\",\n    margin: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Password\"), __jsx(Input, {\n    placeholder: \"Password\",\n    id: \"input\",\n    type: \"password\",\n    value: password,\n    onChange: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    variantColor: \"green\",\n    margin: \"1rem\",\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), __jsx(Link, {\n    href: \"/instructorHome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Instructor Home\")), __jsx(Link, {\n    href: \"/adminHome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variantColor: \"blue\",\n    margin: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Admin Home\"))), __jsx(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"TEST\"));\n};\n\nexport default LoginBox;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/LoginBox.js"],"names":["React","useState","Box","FormControl","FormLabel","Input","Button","Text","useInputState","fakeLogin","Link","API","login","test","testConnection","then","result","console","log","LoginBox","api_helper","addCourse","res","username","setUsername","resetUsername","password","setPassword","resetPassword","handleSubmit","evt","preventDefault","response","alert","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Box, FormControl, FormLabel, Input, Button, Text} from '@chakra-ui/core';\r\nimport '././LoginBox.css';\r\nimport useInputState from '../hooks/useInputState';\r\nimport { fakeLogin } from '../utils/fakeLogin';\r\nimport Link from 'next/link';\r\nimport API from '../api/api';\r\nimport {login} from '../api/APIHelper';\r\n\r\nconst test = async () =>{\r\n    await API.testConnection().then(result => console.log(result));\r\n}\r\nconst LoginBox = () => {\r\n    let api_helper = new API();\r\n\r\n    // //---getFormsBySection(userid, year, semester, department, course, section)---\r\n    // let test_response = api_helper.getFormsBySection(\"MT2020\", 2020, \"Fall\", \"CSCE\", 1030, 1);\r\n\r\n    // //console.log(test_response); // Promise { <pending> }\r\n\r\n    // test_response.then(function (result) {\r\n    //     console.log(result) // \"List of forms\"\r\n\r\n    //     let result_form = result[0];    // first form from list of forms\r\n\r\n    //     let test_response2 = api_helper.postComment(\"MT2020\", 2020, \"Fall\", result_form);\r\n\r\n    //     test_response2.then(function (result2) {\r\n    //         console.log(result2);\r\n    //     });\r\n    // });\r\n    const test = () => {\r\n        new API().addCourse(\"MT2020\", \"Mark\", \"Thompson\", 2020, \"Spring\", \"3530\", \"Networks\").then(res => console.log(res));\r\n    }\r\n    const [username, setUsername, resetUsername] = useInputState(\"\");\r\n    const [password, setPassword, resetPassword] = useInputState(\"\");\r\n    \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        \r\n        try {\r\n            //await fakeLogin(username, password);\r\n            const response = await login(username, password);\r\n\r\n            if (response) {\r\n                alert(\"success\");\r\n                console.log(response);\r\n            }\r\n            else \r\n                alert(\"fail\");\r\n        } catch (error) {\r\n            alert(\"try 'test' & 'pass'\");\r\n        }\r\n        finally{\r\n            resetUsername();\r\n            resetPassword();\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Box className = \"Login-Box\">\r\n        <Text fontSize=\"xl\" className=\"Login\">Login</Text>\r\n            <form onSubmit={handleSubmit}>    \r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"username\" margin = \"1rem\" mt=\"3rem\">Username</FormLabel>\r\n                    <Input placeholder=\"EUID\" id=\"input\" value={username} onChange={setUsername}/>\r\n                </FormControl>\r\n\r\n                <FormControl isRequired>\r\n                    <FormLabel htmlFor=\"password\" margin = \"1rem\">Password</FormLabel>\r\n                    <Input placeholder=\"Password\" id=\"input\" type=\"password\" value={password} onChange={setPassword}/>\r\n                </FormControl>\r\n\r\n                <Button variantColor=\"green\" margin = \"1rem\" onClick = {handleSubmit} type=\"submit\">Sign In</Button>\r\n                <Link href=\"/instructorHome\">\r\n                    <Button variantColor=\"blue\" >Instructor Home</Button>\r\n                </Link>\r\n\r\n                <Link href=\"/adminHome\">\r\n                    <Button variantColor=\"blue\" margin = \"1rem\">Admin Home</Button>\r\n                </Link>\r\n            </form>\r\n            <button onClick={test}>TEST</button>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default LoginBox;"]},"metadata":{},"sourceType":"module"}