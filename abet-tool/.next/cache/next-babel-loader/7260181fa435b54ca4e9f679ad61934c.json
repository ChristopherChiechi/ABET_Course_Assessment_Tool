{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ty\\\\Desktop\\\\ABET_frontend\\\\abet-tool\\\\components\\\\instructor-components\\\\OutcomeInput.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Text, Divider, List, ListItem, Input, IconButton } from '@chakra-ui/core';\nimport \"./OutcomeInput.css\";\nimport useInputState from '../../hooks/useInputState';\n\nconst OutcomeInput = ({\n  outcome,\n  index,\n  studentsByMajor,\n  currentStudentWorks\n}) => {\n  //console.log(currentStudentWorks);\n  const [studentWork, setStudentWork, reset] = useInputState(\"\");\n  console.log(currentStudentWorks.length);\n  const {\n    0: studentWorks,\n    1: setStudentWorks\n  } = useState([currentStudentWorks]);\n\n  const addStudentWork = event => {\n    event.preventDefault();\n    setStudentWorks([...studentWorks, {\n      id: studentWorks.length,\n      studentWork: studentWork\n    }]);\n    reset();\n  };\n\n  const removeStudentWork = id => {\n    event.preventDefault();\n    setStudentWorks(studentWorks.filter(work => work.id !== id));\n  };\n\n  console.log(studentWorks.length);\n  const renderStudentWork = studentWorks.map((work, index) => {\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(ListItem, {\n      color: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, work[index].studentWork), __jsx(IconButton, {\n      ml: \"1rem\",\n      icon: \"delete\",\n      onClick: e => {\n        e.preventDefault();\n        removeStudentWork(work.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), __jsx(IconButton, {\n      ml: \"1rem\",\n      icon: \"attachment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  });\n  const renderStudentNumberMenu = Object.keys(studentsByMajor).map((key, idx) => {\n    const {\n      0: value,\n      1: setValue\n    } = useState(0);\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, key), __jsx(NumberInput, {\n      min: 0,\n      max: studentsByMajor[key],\n      value: value,\n      onChange: value => {\n        value > studentsByMajor[key] ? setValue(0) : setValue(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(NumberInputField, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), __jsx(NumberInputStepper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, __jsx(NumberIncrementStepper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), __jsx(NumberDecrementStepper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }))), __jsx(Text, {\n      color: \"green.500\",\n      fontWeight: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, Math.round(value / studentsByMajor[key] * 100) + \"%\"));\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"outcome-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"vertical-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \"lg\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Course Outcome \", ++index), __jsx(Text, {\n    fontSize: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"\\\"\", outcome, \"\\\"\")), __jsx(\"div\", {\n    className: \"vertical-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \"lg\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Student Work Used\"), __jsx(List, {\n    styleType: \"disc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, renderStudentWork), __jsx(\"form\", {\n    onSubmit: addStudentWork,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    placeholder: \"add student work\",\n    variant: \"flushed\",\n    type: \"text\",\n    value: studentWork,\n    onChange: setStudentWork,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }))), __jsx(\"div\", {\n    className: \"vertical-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    fontSize: \"lg\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Number of Students Who Achieved 75% of this Outcome\"), __jsx(\"div\", {\n    className: \"student-outcome-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, renderStudentNumberMenu))), __jsx(Divider, {\n    borderColor: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default OutcomeInput;","map":{"version":3,"sources":["C:/Users/Ty/Desktop/ABET_frontend/abet-tool/components/instructor-components/OutcomeInput.js"],"names":["React","useState","Box","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Text","Divider","List","ListItem","Input","IconButton","useInputState","OutcomeInput","outcome","index","studentsByMajor","currentStudentWorks","studentWork","setStudentWork","reset","console","log","length","studentWorks","setStudentWorks","addStudentWork","event","preventDefault","id","removeStudentWork","filter","work","renderStudentWork","map","e","renderStudentNumberMenu","Object","keys","key","idx","value","setValue","Math","round"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport {Box, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper,Text, Divider, List, ListItem, Input, IconButton} from '@chakra-ui/core';\r\nimport \"./OutcomeInput.css\";\r\nimport useInputState from '../../hooks/useInputState';\r\n\r\nconst OutcomeInput = ({outcome, index, studentsByMajor, currentStudentWorks}) => {\r\n    //console.log(currentStudentWorks);\r\n    const [studentWork, setStudentWork, reset] = useInputState(\"\");\r\n    console.log(currentStudentWorks.length);\r\n    const [studentWorks, setStudentWorks] = useState([currentStudentWorks]);\r\n    const addStudentWork = event => {\r\n        event.preventDefault();\r\n        setStudentWorks([\r\n            ...studentWorks,\r\n            {\r\n                id: studentWorks.length,\r\n                studentWork: studentWork\r\n            }\r\n        ]);\r\n        reset();\r\n    }\r\n\r\n    const removeStudentWork = (id) => {\r\n        event.preventDefault();\r\n        setStudentWorks(studentWorks.filter(work => work.id !== id));\r\n    } \r\n    console.log(studentWorks.length);\r\n    const renderStudentWork = studentWorks.map((work, index) => {\r\n        return(\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <ListItem color=\"\">{work[index].studentWork}</ListItem>\r\n                <IconButton ml=\"1rem\" icon=\"delete\" onClick={(e)=>{\r\n                    e.preventDefault();\r\n                    removeStudentWork(work.id)\r\n                }}></IconButton>\r\n                <IconButton ml=\"1rem\" icon=\"attachment\"></IconButton>\r\n            </Box>\r\n        )\r\n    });\r\n   \r\n    const renderStudentNumberMenu = Object.keys(studentsByMajor).map( (key, idx) => {\r\n        const [value, setValue] = useState(0);\r\n        return (\r\n            <Box>\r\n                <Text >{key}</Text>\r\n                <NumberInput min={0} max={studentsByMajor[key]} value={value} onChange={value=>{\r\n                        value > studentsByMajor[key] ? setValue(0) : setValue(value);\r\n                    }}>\r\n                    <NumberInputField/>\r\n                    <NumberInputStepper>\r\n                        <NumberIncrementStepper />\r\n                        <NumberDecrementStepper />\r\n                    </NumberInputStepper>\r\n                </NumberInput>\r\n                <Text color=\"green.500\" fontWeight=\"bold\">{ Math.round( value/studentsByMajor[key]*100 )  + \"%\" }</Text>\r\n            </Box>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"outcome-input\">\r\n                <div className=\"vertical-container\">\r\n                    <Text fontSize=\"lg\" fontWeight=\"bold\">Course Outcome {++index}</Text>\r\n                    <Text fontSize=\"lg\">\"{outcome}\"</Text>\r\n                </div>\r\n                <div className=\"vertical-container\">\r\n                    <Text fontSize=\"lg\" fontWeight=\"bold\">Student Work Used</Text>\r\n                    <List styleType=\"disc\">\r\n                        {renderStudentWork}\r\n                    </List>\r\n                    <form onSubmit = {addStudentWork}>\r\n                        <Input \r\n                            placeholder=\"add student work\" \r\n                            variant=\"flushed\" \r\n                            type=\"text\" \r\n                            value={studentWork} \r\n                            onChange={setStudentWork}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div className=\"vertical-container\">\r\n                    <Text fontSize=\"lg\" fontWeight=\"bold\">Number of Students Who Achieved 75% of this Outcome</Text>\r\n                    <div className=\"student-outcome-container\">\r\n                        {renderStudentNumberMenu}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Divider borderColor=\"black\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutcomeInput;"]},"metadata":{},"sourceType":"module"}