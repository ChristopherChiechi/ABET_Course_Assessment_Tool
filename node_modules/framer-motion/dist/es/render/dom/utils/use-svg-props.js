import { __assign } from 'tslib';
import { isMotionValue } from '../../../value/utils/is-motion-value.js';
import { useConstant } from '../../../utils/use-constant.js';
import { useStyle } from './use-html-props.js';

function useInitialMotionProps(visualElement, props) {
    var createAttrs = function () {
        var attrs = visualElement.build().attrs;
        var resolvedMotionValueProps = {};
        for (var key in props) {
            if (isMotionValue(props[key])) {
                resolvedMotionValueProps[key] = props[key].get();
            }
        }
        return __assign(__assign({}, attrs), resolvedMotionValueProps);
    };
    return visualElement.isStatic ? createAttrs() : useConstant(createAttrs);
}
function useSVGProps(visualElement, props) {
    var svgProps = useInitialMotionProps(visualElement, props);
    var style = useStyle(visualElement, props);
    // TODO: Figure out why these aren't being removed
    delete style.transform;
    delete style.transformOrigin;
    svgProps.style = style;
    return svgProps;
}

export { useSVGProps };
